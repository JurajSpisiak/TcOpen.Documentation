### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.Logging.ILogger
  commentId: T:TcOpen.Inxton.Logging.ILogger
  id: ILogger
  parent: TcOpen.Inxton.Logging
  children:
  - TcOpen.Inxton.Logging.ILogger.Debug``1(System.String,``0)
  - TcOpen.Inxton.Logging.ILogger.Error``1(System.String,``0)
  - TcOpen.Inxton.Logging.ILogger.Fatal``1(System.String,``0)
  - TcOpen.Inxton.Logging.ILogger.Information``1(System.String,``0)
  - TcOpen.Inxton.Logging.ILogger.Verbose``1(System.String,``0)
  - TcOpen.Inxton.Logging.ILogger.Warning``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: ILogger
  nameWithType: ILogger
  fullName: TcOpen.Inxton.Logging.ILogger
  type: Interface
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: ILogger
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 5
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nProvides abstraction for arbitrary logger implementation.\n"
  example: []
  syntax:
    content: public interface ILogger
    content.vb: Public Interface ILogger
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TcOpen.Inxton.Logging.ILogger.Debug``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Debug``1(System.String,``0)
  id: Debug``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Debug<T>(String, T)
  nameWithType: ILogger.Debug<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Debug<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Debug
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 13
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs debug message. This should ne used only for debugging purpose and should not be active in production environment.\n"
  example: []
  syntax:
    content: void Debug<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Debug(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Debug*
  nameWithType.vb: ILogger.Debug(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Debug(Of T)(System.String, T)
  name.vb: Debug(Of T)(String, T)
- uid: TcOpen.Inxton.Logging.ILogger.Verbose``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Verbose``1(System.String,``0)
  id: Verbose``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Verbose<T>(String, T)
  nameWithType: ILogger.Verbose<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Verbose<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Verbose
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 22
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs verbose message level. Use for detailed information collection. This level should be activated in particular situations \nand should not be active as a rule in production environment.\n"
  example: []
  syntax:
    content: void Verbose<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Verbose(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Verbose*
  nameWithType.vb: ILogger.Verbose(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Verbose(Of T)(System.String, T)
  name.vb: Verbose(Of T)(String, T)
- uid: TcOpen.Inxton.Logging.ILogger.Information``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Information``1(System.String,``0)
  id: Information``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Information<T>(String, T)
  nameWithType: ILogger.Information<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Information<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Information
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 31
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs information message level. User for logging information that is of interest, such as user actions \n(log-in / log-out, value change, manual command execution, etc.)\n"
  example: []
  syntax:
    content: void Information<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Information(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Information*
  nameWithType.vb: ILogger.Information(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Information(Of T)(System.String, T)
  name.vb: Information(Of T)(String, T)
- uid: TcOpen.Inxton.Logging.ILogger.Warning``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Warning``1(System.String,``0)
  id: Warning``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Warning<T>(String, T)
  nameWithType: ILogger.Warning<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Warning<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Warning
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 40
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs warning message level. Use to preserve information about possible problem or to emphasize an information that\nthe user should be aware of.        \n"
  example: []
  syntax:
    content: void Warning<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Warning(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Warning*
  nameWithType.vb: ILogger.Warning(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Warning(Of T)(System.String, T)
  name.vb: Warning(Of T)(String, T)
- uid: TcOpen.Inxton.Logging.ILogger.Error``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Error``1(System.String,``0)
  id: Error``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Error<T>(String, T)
  nameWithType: ILogger.Error<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Error<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Error
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 48
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs error message level. Use to preserve information an error (e.g. exception)\n"
  example: []
  syntax:
    content: void Error<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Error(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Error*
  nameWithType.vb: ILogger.Error(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Error(Of T)(System.String, T)
  name.vb: Error(Of T)(String, T)
- uid: TcOpen.Inxton.Logging.ILogger.Fatal``1(System.String,``0)
  commentId: M:TcOpen.Inxton.Logging.ILogger.Fatal``1(System.String,``0)
  id: Fatal``1(System.String,``0)
  parent: TcOpen.Inxton.Logging.ILogger
  langs:
  - csharp
  - vb
  name: Fatal<T>(String, T)
  nameWithType: ILogger.Fatal<T>(String, T)
  fullName: TcOpen.Inxton.Logging.ILogger.Fatal<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Fatal
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Logging/ILogger.cs
    startLine: 56
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Logging
  summary: "\nLogs fatal message level. Use to preserve information a fatal error (hardware problem, storage space, essential network connectivity, etc.)\n"
  example: []
  syntax:
    content: void Fatal<T>(string stringTemplate, T payload = null)
    parameters:
    - id: stringTemplate
      type: System.String
      description: Message template
    - id: payload
      type: '{T}'
      description: Object for structured logging
    typeParameters:
    - id: T
      description: ''
    content.vb: Sub Fatal(Of T)(stringTemplate As String, payload As T = Nothing)
  overload: TcOpen.Inxton.Logging.ILogger.Fatal*
  nameWithType.vb: ILogger.Fatal(Of T)(String, T)
  fullName.vb: TcOpen.Inxton.Logging.ILogger.Fatal(Of T)(System.String, T)
  name.vb: Fatal(Of T)(String, T)
references:
- uid: TcOpen.Inxton.Logging
  commentId: N:TcOpen.Inxton.Logging
  name: TcOpen.Inxton.Logging
  nameWithType: TcOpen.Inxton.Logging
  fullName: TcOpen.Inxton.Logging
- uid: TcOpen.Inxton.Logging.ILogger.Debug*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Debug
  name: Debug
  nameWithType: ILogger.Debug
  fullName: TcOpen.Inxton.Logging.ILogger.Debug
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TcOpen.Inxton.Logging.ILogger.Verbose*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Verbose
  name: Verbose
  nameWithType: ILogger.Verbose
  fullName: TcOpen.Inxton.Logging.ILogger.Verbose
- uid: TcOpen.Inxton.Logging.ILogger.Information*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Information
  name: Information
  nameWithType: ILogger.Information
  fullName: TcOpen.Inxton.Logging.ILogger.Information
- uid: TcOpen.Inxton.Logging.ILogger.Warning*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Warning
  name: Warning
  nameWithType: ILogger.Warning
  fullName: TcOpen.Inxton.Logging.ILogger.Warning
- uid: TcOpen.Inxton.Logging.ILogger.Error*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Error
  name: Error
  nameWithType: ILogger.Error
  fullName: TcOpen.Inxton.Logging.ILogger.Error
- uid: TcOpen.Inxton.Logging.ILogger.Fatal*
  commentId: Overload:TcOpen.Inxton.Logging.ILogger.Fatal
  name: Fatal
  nameWithType: ILogger.Fatal
  fullName: TcOpen.Inxton.Logging.ILogger.Fatal
