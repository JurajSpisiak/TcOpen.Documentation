### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.Security.IUser
  commentId: T:TcOpen.Inxton.Security.IUser
  id: IUser
  parent: TcOpen.Inxton.Security
  children:
  - TcOpen.Inxton.Security.IUser.CanUserChangePassword
  - TcOpen.Inxton.Security.IUser.Email
  - TcOpen.Inxton.Security.IUser.Level
  - TcOpen.Inxton.Security.IUser.Roles
  - TcOpen.Inxton.Security.IUser.UserName
  langs:
  - csharp
  - vb
  name: IUser
  nameWithType: IUser
  fullName: TcOpen.Inxton.Security.IUser
  type: Interface
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: IUser
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 2
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: public interface IUser
    content.vb: Public Interface IUser
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TcOpen.Inxton.Security.IUser.CanUserChangePassword
  commentId: P:TcOpen.Inxton.Security.IUser.CanUserChangePassword
  id: CanUserChangePassword
  parent: TcOpen.Inxton.Security.IUser
  langs:
  - csharp
  - vb
  name: CanUserChangePassword
  nameWithType: IUser.CanUserChangePassword
  fullName: TcOpen.Inxton.Security.IUser.CanUserChangePassword
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CanUserChangePassword
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 4
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: bool CanUserChangePassword { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property CanUserChangePassword As Boolean
  overload: TcOpen.Inxton.Security.IUser.CanUserChangePassword*
  modifiers.csharp:
  - get
  - set
- uid: TcOpen.Inxton.Security.IUser.Email
  commentId: P:TcOpen.Inxton.Security.IUser.Email
  id: Email
  parent: TcOpen.Inxton.Security.IUser
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: IUser.Email
  fullName: TcOpen.Inxton.Security.IUser.Email
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Email
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 5
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Email As String
  overload: TcOpen.Inxton.Security.IUser.Email*
  modifiers.csharp:
  - get
  - set
- uid: TcOpen.Inxton.Security.IUser.Level
  commentId: P:TcOpen.Inxton.Security.IUser.Level
  id: Level
  parent: TcOpen.Inxton.Security.IUser
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: IUser.Level
  fullName: TcOpen.Inxton.Security.IUser.Level
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Level
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 6
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: string Level { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Level As String
  overload: TcOpen.Inxton.Security.IUser.Level*
  modifiers.csharp:
  - get
  - set
- uid: TcOpen.Inxton.Security.IUser.Roles
  commentId: P:TcOpen.Inxton.Security.IUser.Roles
  id: Roles
  parent: TcOpen.Inxton.Security.IUser
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: IUser.Roles
  fullName: TcOpen.Inxton.Security.IUser.Roles
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Roles
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 7
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: string[] Roles { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Property Roles As String()
  overload: TcOpen.Inxton.Security.IUser.Roles*
  modifiers.csharp:
  - get
  - set
- uid: TcOpen.Inxton.Security.IUser.UserName
  commentId: P:TcOpen.Inxton.Security.IUser.UserName
  id: UserName
  parent: TcOpen.Inxton.Security.IUser
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IUser.UserName
  fullName: TcOpen.Inxton.Security.IUser.UserName
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: UserName
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/Security/IUser.cs
    startLine: 8
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcOpen.Inxton.Security
  syntax:
    content: string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property UserName As String
  overload: TcOpen.Inxton.Security.IUser.UserName*
  modifiers.csharp:
  - get
  - set
references:
- uid: TcOpen.Inxton.Security
  commentId: N:TcOpen.Inxton.Security
  name: TcOpen.Inxton.Security
  nameWithType: TcOpen.Inxton.Security
  fullName: TcOpen.Inxton.Security
- uid: TcOpen.Inxton.Security.IUser.CanUserChangePassword*
  commentId: Overload:TcOpen.Inxton.Security.IUser.CanUserChangePassword
  name: CanUserChangePassword
  nameWithType: IUser.CanUserChangePassword
  fullName: TcOpen.Inxton.Security.IUser.CanUserChangePassword
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.Security.IUser.Email*
  commentId: Overload:TcOpen.Inxton.Security.IUser.Email
  name: Email
  nameWithType: IUser.Email
  fullName: TcOpen.Inxton.Security.IUser.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TcOpen.Inxton.Security.IUser.Level*
  commentId: Overload:TcOpen.Inxton.Security.IUser.Level
  name: Level
  nameWithType: IUser.Level
  fullName: TcOpen.Inxton.Security.IUser.Level
- uid: TcOpen.Inxton.Security.IUser.Roles*
  commentId: Overload:TcOpen.Inxton.Security.IUser.Roles
  name: Roles
  nameWithType: IUser.Roles
  fullName: TcOpen.Inxton.Security.IUser.Roles
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: TcOpen.Inxton.Security.IUser.UserName*
  commentId: Overload:TcOpen.Inxton.Security.IUser.UserName
  name: UserName
  nameWithType: IUser.UserName
  fullName: TcOpen.Inxton.Security.IUser.UserName
