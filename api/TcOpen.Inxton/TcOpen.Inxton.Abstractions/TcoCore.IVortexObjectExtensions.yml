### YamlMime:ManagedReference
items:
- uid: TcoCore.IVortexObjectExtensions
  commentId: T:TcoCore.IVortexObjectExtensions
  id: IVortexObjectExtensions
  parent: TcoCore
  children:
  - TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject)
  - TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IEnumerable{System.Object})
  - TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IList{``0})
  - TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Int32,System.Collections.Generic.IList{``0},System.Int32)
  - TcoCore.IVortexObjectExtensions.GetParent``1(Vortex.Connector.IVortexObject,``0)
  - TcoCore.IVortexObjectExtensions.GetPlainFromOnline(Vortex.Connector.IVortexObject)
  - TcoCore.IVortexObjectExtensions.GetPlainFromOnline``1(Vortex.Connector.IVortexObject)
  langs:
  - csharp
  - vb
  name: IVortexObjectExtensions
  nameWithType: IVortexObjectExtensions
  fullName: TcoCore.IVortexObjectExtensions
  type: Class
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: IVortexObjectExtensions
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 10
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nProvides extension methods for <xref href=\"Vortex.Connector.IVortexObject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class IVortexObjectExtensions
    content.vb: Public Module IVortexObjectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TcoCore.IVortexObjectExtensions.GetParent``1(Vortex.Connector.IVortexObject,``0)
  commentId: M:TcoCore.IVortexObjectExtensions.GetParent``1(Vortex.Connector.IVortexObject,``0)
  id: GetParent``1(Vortex.Connector.IVortexObject,``0)
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetParent<T>(IVortexObject, T)
  nameWithType: IVortexObjectExtensions.GetParent<T>(IVortexObject, T)
  fullName: TcoCore.IVortexObjectExtensions.GetParent<T>(Vortex.Connector.IVortexObject, T)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetParent
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 23
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nSearches recursively the parents of this <xref href=\"Vortex.Connector.IVortexObject\" data-throw-if-not-resolved=\"false\"></xref> until encounters object of given\ntype. When the root object <xref href=\"Vortex.Connector.IConnector\" data-throw-if-not-resolved=\"false\"></xref> is hit climbing up the hierarchy the method returns pre-existing parent.\n"
  remarks: "\nTake into consideration possible performance degradation due to use of reflections in this method.\n"
  example: []
  syntax:
    content: >-
      public static T GetParent<T>(this IVortexObject obj, T parent = null)
          where T : class
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Searched object
    - id: parent
      type: '{T}'
      description: '[optional] Pre-existing parent. '
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: Parent object of given type.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetParent(Of T As Class)(obj As IVortexObject, parent As T = Nothing) As T
  overload: TcoCore.IVortexObjectExtensions.GetParent*
  nameWithType.vb: IVortexObjectExtensions.GetParent(Of T)(IVortexObject, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetParent(Of T)(Vortex.Connector.IVortexObject, T)
  name.vb: GetParent(Of T)(IVortexObject, T)
- uid: TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IList{``0})
  commentId: M:TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IList{``0})
  id: GetDescendants``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IList{``0})
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetDescendants<T>(IVortexObject, IList<T>)
  nameWithType: IVortexObjectExtensions.GetDescendants<T>(IVortexObject, IList<T>)
  fullName: TcoCore.IVortexObjectExtensions.GetDescendants<T>(Vortex.Connector.IVortexObject, System.Collections.Generic.IList<T>)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetDescendants
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 47
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nSearches recursively the children of this <xref href=\"Vortex.Connector.IVortexObject\" data-throw-if-not-resolved=\"false\"></xref>         \n"
  remarks: "\nTake into consideration possible performance degradation due to use of reflections in this method.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<T> GetDescendants<T>(this IVortexObject obj, IList<T> children = null)
          where T : class
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Searched object
    - id: children
      type: System.Collections.Generic.IList{{T}}
      description: '[optional] Pre-existing children. '
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Children of this object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDescendants(Of T As Class)(obj As IVortexObject, children As IList(Of T) = Nothing) As IEnumerable(Of T)
  overload: TcoCore.IVortexObjectExtensions.GetDescendants*
  nameWithType.vb: IVortexObjectExtensions.GetDescendants(Of T)(IVortexObject, IList(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetDescendants(Of T)(Vortex.Connector.IVortexObject, System.Collections.Generic.IList(Of T))
  name.vb: GetDescendants(Of T)(IVortexObject, IList(Of T))
- uid: TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Int32,System.Collections.Generic.IList{``0},System.Int32)
  commentId: M:TcoCore.IVortexObjectExtensions.GetDescendants``1(Vortex.Connector.IVortexObject,System.Int32,System.Collections.Generic.IList{``0},System.Int32)
  id: GetDescendants``1(Vortex.Connector.IVortexObject,System.Int32,System.Collections.Generic.IList{``0},System.Int32)
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetDescendants<T>(IVortexObject, Int32, IList<T>, Int32)
  nameWithType: IVortexObjectExtensions.GetDescendants<T>(IVortexObject, Int32, IList<T>, Int32)
  fullName: TcoCore.IVortexObjectExtensions.GetDescendants<T>(Vortex.Connector.IVortexObject, System.Int32, System.Collections.Generic.IList<T>, System.Int32)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetDescendants
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 80
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nGets descendant objects of given type up to given tree depth.\n"
  remarks: "\nTake into consideration possible performance degradation due to use of reflections in this method.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<T> GetDescendants<T>(this IVortexObject obj, int depth, IList<T> children = null, int currentDepth = 0)
          where T : class
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Root object
    - id: depth
      type: System.Int32
      description: Depth to search for descendant objects
    - id: children
      type: System.Collections.Generic.IList{{T}}
      description: '[optional] Pre-existing descendants.'
    - id: currentDepth
      type: System.Int32
      description: '[optional] Current depth'
    typeParameters:
    - id: T
      description: Descendant type
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Descendant of given type up to given depth.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDescendants(Of T As Class)(obj As IVortexObject, depth As Integer, children As IList(Of T) = Nothing, currentDepth As Integer = 0) As IEnumerable(Of T)
  overload: TcoCore.IVortexObjectExtensions.GetDescendants*
  nameWithType.vb: IVortexObjectExtensions.GetDescendants(Of T)(IVortexObject, Int32, IList(Of T), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetDescendants(Of T)(Vortex.Connector.IVortexObject, System.Int32, System.Collections.Generic.IList(Of T), System.Int32)
  name.vb: GetDescendants(Of T)(IVortexObject, Int32, IList(Of T), Int32)
- uid: TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject)
  commentId: M:TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject)
  id: GetChildren``1(Vortex.Connector.IVortexObject)
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetChildren<T>(IVortexObject)
  nameWithType: IVortexObjectExtensions.GetChildren<T>(IVortexObject)
  fullName: TcoCore.IVortexObjectExtensions.GetChildren<T>(Vortex.Connector.IVortexObject)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetChildren
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 114
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nGet the children of given type of this <xref href=\"Vortex.Connector.IVortexObject\" data-throw-if-not-resolved=\"false\"></xref>         \n"
  remarks: "\nTake into consideration possible performance degradation due to use of reflections in this method.\n"
  example: []
  syntax:
    content: >-
      public static IEnumerable<T> GetChildren<T>(this IVortexObject obj)
          where T : IVortexObject
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Searched object
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: Children of this object.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetChildren(Of T As IVortexObject)(obj As IVortexObject) As IEnumerable(Of T)
  overload: TcoCore.IVortexObjectExtensions.GetChildren*
  nameWithType.vb: IVortexObjectExtensions.GetChildren(Of T)(IVortexObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetChildren(Of T)(Vortex.Connector.IVortexObject)
  name.vb: GetChildren(Of T)(IVortexObject)
- uid: TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IEnumerable{System.Object})
  commentId: M:TcoCore.IVortexObjectExtensions.GetChildren``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IEnumerable{System.Object})
  id: GetChildren``1(Vortex.Connector.IVortexObject,System.Collections.Generic.IEnumerable{System.Object})
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetChildren<T>(IVortexObject, IEnumerable<Object>)
  nameWithType: IVortexObjectExtensions.GetChildren<T>(IVortexObject, IEnumerable<Object>)
  fullName: TcoCore.IVortexObjectExtensions.GetChildren<T>(Vortex.Connector.IVortexObject, System.Collections.Generic.IEnumerable<System.Object>)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetChildren
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 120
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  syntax:
    content: >-
      public static IEnumerable<T> GetChildren<T>(this IVortexObject obj, IEnumerable<object> excluding)
          where T : IVortexObject
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
    - id: excluding
      type: System.Collections.Generic.IEnumerable{System.Object}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetChildren(Of T As IVortexObject)(obj As IVortexObject, excluding As IEnumerable(Of Object)) As IEnumerable(Of T)
  overload: TcoCore.IVortexObjectExtensions.GetChildren*
  nameWithType.vb: IVortexObjectExtensions.GetChildren(Of T)(IVortexObject, IEnumerable(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetChildren(Of T)(Vortex.Connector.IVortexObject, System.Collections.Generic.IEnumerable(Of System.Object))
  name.vb: GetChildren(Of T)(IVortexObject, IEnumerable(Of Object))
- uid: TcoCore.IVortexObjectExtensions.GetPlainFromOnline``1(Vortex.Connector.IVortexObject)
  commentId: M:TcoCore.IVortexObjectExtensions.GetPlainFromOnline``1(Vortex.Connector.IVortexObject)
  id: GetPlainFromOnline``1(Vortex.Connector.IVortexObject)
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetPlainFromOnline<T>(IVortexObject)
  nameWithType: IVortexObjectExtensions.GetPlainFromOnline<T>(IVortexObject)
  fullName: TcoCore.IVortexObjectExtensions.GetPlainFromOnline<T>(Vortex.Connector.IVortexObject)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetPlainFromOnline
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 137
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nGet the Plain (POCO) object populated with current online data.\n"
  remarks: "\nThis method uses dynamic casting, which may impact the performance of the data exchange.\n"
  example: []
  syntax:
    content: public static T GetPlainFromOnline<T>(this IVortexObject obj)
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Onliner from which the plain is created.
    typeParameters:
    - id: T
    return:
      type: '{T}'
      description: Plain (POCO) object populated with current online data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPlainFromOnline(Of T)(obj As IVortexObject) As T
  overload: TcoCore.IVortexObjectExtensions.GetPlainFromOnline*
  nameWithType.vb: IVortexObjectExtensions.GetPlainFromOnline(Of T)(IVortexObject)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcoCore.IVortexObjectExtensions.GetPlainFromOnline(Of T)(Vortex.Connector.IVortexObject)
  name.vb: GetPlainFromOnline(Of T)(IVortexObject)
- uid: TcoCore.IVortexObjectExtensions.GetPlainFromOnline(Vortex.Connector.IVortexObject)
  commentId: M:TcoCore.IVortexObjectExtensions.GetPlainFromOnline(Vortex.Connector.IVortexObject)
  id: GetPlainFromOnline(Vortex.Connector.IVortexObject)
  isExtensionMethod: true
  parent: TcoCore.IVortexObjectExtensions
  langs:
  - csharp
  - vb
  name: GetPlainFromOnline(IVortexObject)
  nameWithType: IVortexObjectExtensions.GetPlainFromOnline(IVortexObject)
  fullName: TcoCore.IVortexObjectExtensions.GetPlainFromOnline(Vortex.Connector.IVortexObject)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
      branch: 325-Create_signal_and_data_inspectors_former_checkers
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: GetPlainFromOnline
    path: ../TcOpen/src/TcOpen.Inxton/src/Abstractions/TcoCore/IVortexObjectExtensions.cs
    startLine: 154
  assemblies:
  - TcOpen.Inxton.Abstractions
  namespace: TcoCore
  summary: "\nGet the Plain (POCO) object populated with current online data.\n"
  remarks: "\nThis method uses dynamic casting, which may impact the performance of the data exchange.\n"
  example: []
  syntax:
    content: public static object GetPlainFromOnline(this IVortexObject obj)
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Onliner from which the plain is created.
    return:
      type: System.Object
      description: Plain (POCO) object populated with current online data.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetPlainFromOnline(obj As IVortexObject) As Object
  overload: TcoCore.IVortexObjectExtensions.GetPlainFromOnline*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Vortex.Connector.IVortexObject
  commentId: T:Vortex.Connector.IVortexObject
  parent: Vortex.Connector
  isExternal: true
  name: IVortexObject
  nameWithType: IVortexObject
  fullName: Vortex.Connector.IVortexObject
- uid: TcoCore
  commentId: N:TcoCore
  name: TcoCore
  nameWithType: TcoCore
  fullName: TcoCore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Connector
  commentId: N:Vortex.Connector
  isExternal: true
  name: Vortex.Connector
  nameWithType: Vortex.Connector
  fullName: Vortex.Connector
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vortex.Connector.IConnector
  commentId: T:Vortex.Connector.IConnector
  isExternal: true
- uid: TcoCore.IVortexObjectExtensions.GetParent*
  commentId: Overload:TcoCore.IVortexObjectExtensions.GetParent
  name: GetParent
  nameWithType: IVortexObjectExtensions.GetParent
  fullName: TcoCore.IVortexObjectExtensions.GetParent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TcoCore.IVortexObjectExtensions.GetDescendants*
  commentId: Overload:TcoCore.IVortexObjectExtensions.GetDescendants
  name: GetDescendants
  nameWithType: IVortexObjectExtensions.GetDescendants
  fullName: TcoCore.IVortexObjectExtensions.GetDescendants
- uid: System.Collections.Generic.IList{{T}}
  commentId: T:System.Collections.Generic.IList{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TcoCore.IVortexObjectExtensions.GetChildren*
  commentId: Overload:TcoCore.IVortexObjectExtensions.GetChildren
  name: GetChildren
  nameWithType: IVortexObjectExtensions.GetChildren
  fullName: TcoCore.IVortexObjectExtensions.GetChildren
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TcoCore.IVortexObjectExtensions.GetPlainFromOnline*
  commentId: Overload:TcoCore.IVortexObjectExtensions.GetPlainFromOnline
  name: GetPlainFromOnline
  nameWithType: IVortexObjectExtensions.GetPlainFromOnline
  fullName: TcoCore.IVortexObjectExtensions.GetPlainFromOnline
