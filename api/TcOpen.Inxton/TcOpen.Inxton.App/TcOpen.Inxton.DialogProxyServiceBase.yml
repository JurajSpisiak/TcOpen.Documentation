### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.DialogProxyServiceBase
  commentId: T:TcOpen.Inxton.DialogProxyServiceBase
  id: DialogProxyServiceBase
  parent: TcOpen.Inxton
  children:
  - TcOpen.Inxton.DialogProxyServiceBase.#ctor(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  - TcOpen.Inxton.DialogProxyServiceBase.Queue(TcOpen.Inxton.Dialogs.IsDialog)
  - TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  langs:
  - csharp
  - vb
  name: DialogProxyServiceBase
  nameWithType: DialogProxyServiceBase
  fullName: TcOpen.Inxton.DialogProxyServiceBase
  type: Class
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DialogProxyServiceBase
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
    startLine: 12
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  syntax:
    content: public abstract class DialogProxyServiceBase
    content.vb: Public MustInherit Class DialogProxyServiceBase
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: TcOpen.Inxton.DialogProxyServiceBase.#ctor(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  commentId: M:TcOpen.Inxton.DialogProxyServiceBase.#ctor(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  id: '#ctor(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})'
  parent: TcOpen.Inxton.DialogProxyServiceBase
  langs:
  - csharp
  - vb
  name: DialogProxyServiceBase(IEnumerable<IVortexObject>)
  nameWithType: DialogProxyServiceBase.DialogProxyServiceBase(IEnumerable<IVortexObject>)
  fullName: TcOpen.Inxton.DialogProxyServiceBase.DialogProxyServiceBase(System.Collections.Generic.IEnumerable<Vortex.Connector.IVortexObject>)
  type: Constructor
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: .ctor
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
    startLine: 14
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  syntax:
    content: protected DialogProxyServiceBase(IEnumerable<IVortexObject> observedObjects)
    parameters:
    - id: observedObjects
      type: System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject}
    content.vb: Protected Sub New(observedObjects As IEnumerable(Of IVortexObject))
  overload: TcOpen.Inxton.DialogProxyServiceBase.#ctor*
  nameWithType.vb: DialogProxyServiceBase.DialogProxyServiceBase(IEnumerable(Of IVortexObject))
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: TcOpen.Inxton.DialogProxyServiceBase.DialogProxyServiceBase(System.Collections.Generic.IEnumerable(Of Vortex.Connector.IVortexObject))
  name.vb: DialogProxyServiceBase(IEnumerable(Of IVortexObject))
- uid: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  commentId: M:TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  id: UpdateDialogs(System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject})
  parent: TcOpen.Inxton.DialogProxyServiceBase
  langs:
  - csharp
  - vb
  name: UpdateDialogs(IEnumerable<IVortexObject>)
  nameWithType: DialogProxyServiceBase.UpdateDialogs(IEnumerable<IVortexObject>)
  fullName: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs(System.Collections.Generic.IEnumerable<Vortex.Connector.IVortexObject>)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: UpdateDialogs
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
    startLine: 18
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  syntax:
    content: void UpdateDialogs(IEnumerable<IVortexObject> observedObjects)
    parameters:
    - id: observedObjects
      type: System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject}
    content.vb: Sub UpdateDialogs(observedObjects As IEnumerable(Of IVortexObject))
  overload: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs*
  nameWithType.vb: DialogProxyServiceBase.UpdateDialogs(IEnumerable(Of IVortexObject))
  fullName.vb: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs(System.Collections.Generic.IEnumerable(Of Vortex.Connector.IVortexObject))
  name.vb: UpdateDialogs(IEnumerable(Of IVortexObject))
- uid: TcOpen.Inxton.DialogProxyServiceBase.Queue(TcOpen.Inxton.Dialogs.IsDialog)
  commentId: M:TcOpen.Inxton.DialogProxyServiceBase.Queue(TcOpen.Inxton.Dialogs.IsDialog)
  id: Queue(TcOpen.Inxton.Dialogs.IsDialog)
  parent: TcOpen.Inxton.DialogProxyServiceBase
  langs:
  - csharp
  - vb
  name: Queue(IsDialog)
  nameWithType: DialogProxyServiceBase.Queue(IsDialog)
  fullName: TcOpen.Inxton.DialogProxyServiceBase.Queue(TcOpen.Inxton.Dialogs.IsDialog)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Queue
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Dialogs/DialogProxyService.cs
    startLine: 30
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  syntax:
    content: protected abstract void Queue(IsDialog dialog)
    parameters:
    - id: dialog
      type: TcOpen.Inxton.Dialogs.IsDialog
    content.vb: Protected MustOverride Sub Queue(dialog As IsDialog)
  overload: TcOpen.Inxton.DialogProxyServiceBase.Queue*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
references:
- uid: TcOpen.Inxton
  commentId: N:TcOpen.Inxton
  name: TcOpen.Inxton
  nameWithType: TcOpen.Inxton
  fullName: TcOpen.Inxton
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.DialogProxyServiceBase.#ctor*
  commentId: Overload:TcOpen.Inxton.DialogProxyServiceBase.#ctor
  name: DialogProxyServiceBase
  nameWithType: DialogProxyServiceBase.DialogProxyServiceBase
  fullName: TcOpen.Inxton.DialogProxyServiceBase.DialogProxyServiceBase
- uid: System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject}
  commentId: T:System.Collections.Generic.IEnumerable{Vortex.Connector.IVortexObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IVortexObject>
  nameWithType: IEnumerable<IVortexObject>
  fullName: System.Collections.Generic.IEnumerable<Vortex.Connector.IVortexObject>
  nameWithType.vb: IEnumerable(Of IVortexObject)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Vortex.Connector.IVortexObject)
  name.vb: IEnumerable(Of IVortexObject)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vortex.Connector.IVortexObject
    name: IVortexObject
    nameWithType: IVortexObject
    fullName: Vortex.Connector.IVortexObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vortex.Connector.IVortexObject
    name: IVortexObject
    nameWithType: IVortexObject
    fullName: Vortex.Connector.IVortexObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs*
  commentId: Overload:TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs
  name: UpdateDialogs
  nameWithType: DialogProxyServiceBase.UpdateDialogs
  fullName: TcOpen.Inxton.DialogProxyServiceBase.UpdateDialogs
- uid: TcOpen.Inxton.DialogProxyServiceBase.Queue*
  commentId: Overload:TcOpen.Inxton.DialogProxyServiceBase.Queue
  name: Queue
  nameWithType: DialogProxyServiceBase.Queue
  fullName: TcOpen.Inxton.DialogProxyServiceBase.Queue
- uid: TcOpen.Inxton.Dialogs.IsDialog
  commentId: T:TcOpen.Inxton.Dialogs.IsDialog
  parent: TcOpen.Inxton.Dialogs
  name: IsDialog
  nameWithType: IsDialog
  fullName: TcOpen.Inxton.Dialogs.IsDialog
- uid: TcOpen.Inxton.Dialogs
  commentId: N:TcOpen.Inxton.Dialogs
  name: TcOpen.Inxton.Dialogs
  nameWithType: TcOpen.Inxton.Dialogs
  fullName: TcOpen.Inxton.Dialogs
