### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.TcoAppBuilder
  commentId: T:TcOpen.Inxton.TcoAppBuilder
  id: TcoAppBuilder
  parent: TcOpen.Inxton
  children:
  - TcOpen.Inxton.TcoAppBuilder.#ctor(TcOpen.Inxton.TcoAppDomain)
  - TcOpen.Inxton.TcoAppBuilder.Domain
  - TcOpen.Inxton.TcoAppBuilder.SetDispatcher(TcOpen.Inxton.Threading.IDispatcher)
  - TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging(Vortex.Connector.IVortexObject)
  - TcOpen.Inxton.TcoAppBuilder.SetSecurity(TcOpen.Inxton.Security.IAuthenticationService)
  - TcOpen.Inxton.TcoAppBuilder.SetUpLogger(TcOpen.Inxton.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: TcoAppBuilder
  nameWithType: TcoAppBuilder
  fullName: TcOpen.Inxton.TcoAppBuilder
  type: Class
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: TcoAppBuilder
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 12
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nTcOpen application configuration builder.\n"
  example: []
  syntax:
    content: public class TcoAppBuilder
    content.vb: Public Class TcoAppBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TcOpen.Inxton.TcoAppBuilder.#ctor(TcOpen.Inxton.TcoAppDomain)
  commentId: M:TcOpen.Inxton.TcoAppBuilder.#ctor(TcOpen.Inxton.TcoAppDomain)
  id: '#ctor(TcOpen.Inxton.TcoAppDomain)'
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: TcoAppBuilder(TcoAppDomain)
  nameWithType: TcoAppBuilder.TcoAppBuilder(TcoAppDomain)
  fullName: TcOpen.Inxton.TcoAppBuilder.TcoAppBuilder(TcOpen.Inxton.TcoAppDomain)
  type: Constructor
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: .ctor
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 17
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nCreates new instance of <see cref=\"!:TcoApplication\"></see>\n"
  example: []
  syntax:
    content: TcoAppBuilder(TcoAppDomain domain)
    parameters:
    - id: domain
      type: TcOpen.Inxton.TcoAppDomain
    content.vb: Sub New(domain As TcoAppDomain)
  overload: TcOpen.Inxton.TcoAppBuilder.#ctor*
- uid: TcOpen.Inxton.TcoAppBuilder.Domain
  commentId: P:TcOpen.Inxton.TcoAppBuilder.Domain
  id: Domain
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: TcoAppBuilder.Domain
  fullName: TcOpen.Inxton.TcoAppBuilder.Domain
  type: Property
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Domain
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 22
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  syntax:
    content: TcoAppDomain Domain { }
    parameters: []
    return:
      type: TcOpen.Inxton.TcoAppDomain
    content.vb: ReadOnly WriteOnly Property Domain As TcoAppDomain
  overload: TcOpen.Inxton.TcoAppBuilder.Domain*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: TcOpen.Inxton.TcoAppBuilder.SetUpLogger(TcOpen.Inxton.Logging.ILogger)
  commentId: M:TcOpen.Inxton.TcoAppBuilder.SetUpLogger(TcOpen.Inxton.Logging.ILogger)
  id: SetUpLogger(TcOpen.Inxton.Logging.ILogger)
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: SetUpLogger(ILogger)
  nameWithType: TcoAppBuilder.SetUpLogger(ILogger)
  fullName: TcOpen.Inxton.TcoAppBuilder.SetUpLogger(TcOpen.Inxton.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: SetUpLogger
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 29
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nSets the logger for this application.\n"
  example: []
  syntax:
    content: public TcoAppBuilder SetUpLogger(ILogger logger)
    parameters:
    - id: logger
      type: TcOpen.Inxton.Logging.ILogger
      description: Instance of a logger.
    return:
      type: TcOpen.Inxton.TcoAppBuilder
      description: Application builder.
    content.vb: Public Function SetUpLogger(logger As ILogger) As TcoAppBuilder
  overload: TcOpen.Inxton.TcoAppBuilder.SetUpLogger*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TcOpen.Inxton.TcoAppBuilder.SetDispatcher(TcOpen.Inxton.Threading.IDispatcher)
  commentId: M:TcOpen.Inxton.TcoAppBuilder.SetDispatcher(TcOpen.Inxton.Threading.IDispatcher)
  id: SetDispatcher(TcOpen.Inxton.Threading.IDispatcher)
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: SetDispatcher(IDispatcher)
  nameWithType: TcoAppBuilder.SetDispatcher(IDispatcher)
  fullName: TcOpen.Inxton.TcoAppBuilder.SetDispatcher(TcOpen.Inxton.Threading.IDispatcher)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: SetDispatcher
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 40
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nSets the dispatcher for this application.\n"
  example: []
  syntax:
    content: public TcoAppBuilder SetDispatcher(IDispatcher dispatcher)
    parameters:
    - id: dispatcher
      type: TcOpen.Inxton.Threading.IDispatcher
    return:
      type: TcOpen.Inxton.TcoAppBuilder
      description: Application builder.
    content.vb: Public Function SetDispatcher(dispatcher As IDispatcher) As TcoAppBuilder
  overload: TcOpen.Inxton.TcoAppBuilder.SetDispatcher*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TcOpen.Inxton.TcoAppBuilder.SetSecurity(TcOpen.Inxton.Security.IAuthenticationService)
  commentId: M:TcOpen.Inxton.TcoAppBuilder.SetSecurity(TcOpen.Inxton.Security.IAuthenticationService)
  id: SetSecurity(TcOpen.Inxton.Security.IAuthenticationService)
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: SetSecurity(IAuthenticationService)
  nameWithType: TcoAppBuilder.SetSecurity(IAuthenticationService)
  fullName: TcOpen.Inxton.TcoAppBuilder.SetSecurity(TcOpen.Inxton.Security.IAuthenticationService)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: SetSecurity
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 51
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nSets the authentication service for the application.\n"
  example: []
  syntax:
    content: public TcoAppBuilder SetSecurity(IAuthenticationService authenticationService)
    parameters:
    - id: authenticationService
      type: TcOpen.Inxton.Security.IAuthenticationService
      description: Authentication service
    return:
      type: TcOpen.Inxton.TcoAppBuilder
      description: AppBuilder
    content.vb: Public Function SetSecurity(authenticationService As IAuthenticationService) As TcoAppBuilder
  overload: TcOpen.Inxton.TcoAppBuilder.SetSecurity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging(Vortex.Connector.IVortexObject)
  commentId: M:TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging(Vortex.Connector.IVortexObject)
  id: SetEditValueChangeLogging(Vortex.Connector.IVortexObject)
  parent: TcOpen.Inxton.TcoAppBuilder
  langs:
  - csharp
  - vb
  name: SetEditValueChangeLogging(IVortexObject)
  nameWithType: TcoAppBuilder.SetEditValueChangeLogging(IVortexObject)
  fullName: TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging(Vortex.Connector.IVortexObject)
  type: Method
  source:
    remote:
      path: src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: SetEditValueChangeLogging
    path: ../TcOpen/src/TcOpen.Inxton/src/Application/Application/TcoAppBuilder.cs
    startLine: 63
  assemblies:
  - TcOpen.Inxton.App
  namespace: TcOpen.Inxton
  summary: "\nSets the logging for the &apos;Edit&apos; -> &apos;Online&apos; value change.\n"
  example: []
  syntax:
    content: public TcoAppBuilder SetEditValueChangeLogging(IVortexObject obj)
    parameters:
    - id: obj
      type: Vortex.Connector.IVortexObject
      description: Root twin object
    return:
      type: TcOpen.Inxton.TcoAppBuilder
      description: AppBuilder
    content.vb: Public Function SetEditValueChangeLogging(obj As IVortexObject) As TcoAppBuilder
  overload: TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TcOpen.Inxton
  commentId: N:TcOpen.Inxton
  name: TcOpen.Inxton
  nameWithType: TcOpen.Inxton
  fullName: TcOpen.Inxton
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.TcoAppBuilder.#ctor*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.#ctor
  name: TcoAppBuilder
  nameWithType: TcoAppBuilder.TcoAppBuilder
  fullName: TcOpen.Inxton.TcoAppBuilder.TcoAppBuilder
- uid: TcOpen.Inxton.TcoAppDomain
  commentId: T:TcOpen.Inxton.TcoAppDomain
  parent: TcOpen.Inxton
  name: TcoAppDomain
  nameWithType: TcoAppDomain
  fullName: TcOpen.Inxton.TcoAppDomain
- uid: TcOpen.Inxton.TcoAppBuilder.Domain*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.Domain
  name: Domain
  nameWithType: TcoAppBuilder.Domain
  fullName: TcOpen.Inxton.TcoAppBuilder.Domain
- uid: TcOpen.Inxton.TcoAppBuilder.SetUpLogger*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.SetUpLogger
  name: SetUpLogger
  nameWithType: TcoAppBuilder.SetUpLogger
  fullName: TcOpen.Inxton.TcoAppBuilder.SetUpLogger
- uid: TcOpen.Inxton.Logging.ILogger
  commentId: T:TcOpen.Inxton.Logging.ILogger
  parent: TcOpen.Inxton.Logging
  name: ILogger
  nameWithType: ILogger
  fullName: TcOpen.Inxton.Logging.ILogger
- uid: TcOpen.Inxton.TcoAppBuilder
  commentId: T:TcOpen.Inxton.TcoAppBuilder
  parent: TcOpen.Inxton
  name: TcoAppBuilder
  nameWithType: TcoAppBuilder
  fullName: TcOpen.Inxton.TcoAppBuilder
- uid: TcOpen.Inxton.Logging
  commentId: N:TcOpen.Inxton.Logging
  name: TcOpen.Inxton.Logging
  nameWithType: TcOpen.Inxton.Logging
  fullName: TcOpen.Inxton.Logging
- uid: TcOpen.Inxton.TcoAppBuilder.SetDispatcher*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.SetDispatcher
  name: SetDispatcher
  nameWithType: TcoAppBuilder.SetDispatcher
  fullName: TcOpen.Inxton.TcoAppBuilder.SetDispatcher
- uid: TcOpen.Inxton.Threading.IDispatcher
  commentId: T:TcOpen.Inxton.Threading.IDispatcher
  parent: TcOpen.Inxton.Threading
  name: IDispatcher
  nameWithType: IDispatcher
  fullName: TcOpen.Inxton.Threading.IDispatcher
- uid: TcOpen.Inxton.Threading
  commentId: N:TcOpen.Inxton.Threading
  name: TcOpen.Inxton.Threading
  nameWithType: TcOpen.Inxton.Threading
  fullName: TcOpen.Inxton.Threading
- uid: TcOpen.Inxton.TcoAppBuilder.SetSecurity*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.SetSecurity
  name: SetSecurity
  nameWithType: TcoAppBuilder.SetSecurity
  fullName: TcOpen.Inxton.TcoAppBuilder.SetSecurity
- uid: TcOpen.Inxton.Security.IAuthenticationService
  commentId: T:TcOpen.Inxton.Security.IAuthenticationService
  parent: TcOpen.Inxton.Security
  name: IAuthenticationService
  nameWithType: IAuthenticationService
  fullName: TcOpen.Inxton.Security.IAuthenticationService
- uid: TcOpen.Inxton.Security
  commentId: N:TcOpen.Inxton.Security
  name: TcOpen.Inxton.Security
  nameWithType: TcOpen.Inxton.Security
  fullName: TcOpen.Inxton.Security
- uid: TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging*
  commentId: Overload:TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging
  name: SetEditValueChangeLogging
  nameWithType: TcoAppBuilder.SetEditValueChangeLogging
  fullName: TcOpen.Inxton.TcoAppBuilder.SetEditValueChangeLogging
- uid: Vortex.Connector.IVortexObject
  commentId: T:Vortex.Connector.IVortexObject
  parent: Vortex.Connector
  isExternal: true
  name: IVortexObject
  nameWithType: IVortexObject
  fullName: Vortex.Connector.IVortexObject
- uid: Vortex.Connector
  commentId: N:Vortex.Connector
  isExternal: true
  name: Vortex.Connector
  nameWithType: Vortex.Connector
  fullName: Vortex.Connector
