### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.Data.DataBrowser`1.ImportItems
  commentId: T:TcOpen.Inxton.Data.DataBrowser`1.ImportItems
  id: DataBrowser`1.ImportItems
  parent: TcOpen.Inxton.Data
  children:
  - TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key
  - TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value
  langs:
  - csharp
  - vb
  name: DataBrowser<T>.ImportItems
  nameWithType: DataBrowser<T>.ImportItems
  fullName: TcOpen.Inxton.Data.DataBrowser<T>.ImportItems
  type: Class
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: ImportItems
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 163
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: class ImportItems
    content.vb: Class ImportItems
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DataBrowser(Of T).ImportItems
  modifiers.csharp:
  - class
  modifiers.vb:
  - Class
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T).ImportItems
  name.vb: DataBrowser(Of T).ImportItems
- uid: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key
  commentId: P:TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key
  id: Key
  parent: TcOpen.Inxton.Data.DataBrowser`1.ImportItems
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: DataBrowser<T>.ImportItems.Key
  fullName: TcOpen.Inxton.Data.DataBrowser<T>.ImportItems.Key
  type: Property
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Key
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 165
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: >-
      string Key

      {

      }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property Key As String
  overload: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key*
  nameWithType.vb: DataBrowser(Of T).ImportItems.Key
  modifiers.csharp:
  - get
  - set
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T).ImportItems.Key
- uid: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value
  commentId: P:TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value
  id: Value
  parent: TcOpen.Inxton.Data.DataBrowser`1.ImportItems
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: DataBrowser<T>.ImportItems.Value
  fullName: TcOpen.Inxton.Data.DataBrowser<T>.ImportItems.Value
  type: Property
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen.git
    id: Value
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 166
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: >-
      dynamic Value

      {

      }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property Value As Object
  overload: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value*
  nameWithType.vb: DataBrowser(Of T).ImportItems.Value
  modifiers.csharp:
  - get
  - set
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T).ImportItems.Value
references:
- uid: TcOpen.Inxton.Data
  commentId: N:TcOpen.Inxton.Data
  name: TcOpen.Inxton.Data
  nameWithType: TcOpen.Inxton.Data
  fullName: TcOpen.Inxton.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key*
  commentId: Overload:TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Key
  name: Key
  nameWithType: DataBrowser<T>.ImportItems.Key
  fullName: TcOpen.Inxton.Data.DataBrowser<T>.ImportItems.Key
  nameWithType.vb: DataBrowser(Of T).ImportItems.Key
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T).ImportItems.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value*
  commentId: Overload:TcOpen.Inxton.Data.DataBrowser`1.ImportItems.Value
  name: Value
  nameWithType: DataBrowser<T>.ImportItems.Value
  fullName: TcOpen.Inxton.Data.DataBrowser<T>.ImportItems.Value
  nameWithType.vb: DataBrowser(Of T).ImportItems.Value
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T).ImportItems.Value
