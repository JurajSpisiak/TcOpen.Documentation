### YamlMime:ManagedReference
items:
- uid: TcOpen.Inxton.Data.DataBrowser
  commentId: T:TcOpen.Inxton.Data.DataBrowser
  id: DataBrowser
  parent: TcOpen.Inxton.Data
  children:
  - TcOpen.Inxton.Data.DataBrowser.Create``1(TcOpen.Inxton.Data.IRepository{``0})
  - TcOpen.Inxton.Data.DataBrowser.Factory``1(TcOpen.Inxton.Data.IRepository{``0})
  langs:
  - csharp
  - vb
  name: DataBrowser
  nameWithType: DataBrowser
  fullName: TcOpen.Inxton.Data.DataBrowser
  type: Class
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DataBrowser
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 341
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: public static class DataBrowser
    content.vb: Public Module DataBrowser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TcOpen.Inxton.Data.DataBrowser.Factory``1(TcOpen.Inxton.Data.IRepository{``0})
  commentId: M:TcOpen.Inxton.Data.DataBrowser.Factory``1(TcOpen.Inxton.Data.IRepository{``0})
  id: Factory``1(TcOpen.Inxton.Data.IRepository{``0})
  parent: TcOpen.Inxton.Data.DataBrowser
  langs:
  - csharp
  - vb
  name: Factory<T>(IRepository<T>)
  nameWithType: DataBrowser.Factory<T>(IRepository<T>)
  fullName: TcOpen.Inxton.Data.DataBrowser.Factory<T>(TcOpen.Inxton.Data.IRepository<T>)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Factory
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 343
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: >-
      public static DataBrowser<T> Factory<T>(IRepository<T> repository)

          where T : IBrowsableDataObject, new()
    parameters:
    - id: repository
      type: TcOpen.Inxton.Data.IRepository{{T}}
    typeParameters:
    - id: T
    return:
      type: TcOpen.Inxton.Data.DataBrowser{{T}}
    content.vb: Public Shared Function Factory(Of T As {IBrowsableDataObject, New})(repository As IRepository(Of T)) As DataBrowser(Of T)
  overload: TcOpen.Inxton.Data.DataBrowser.Factory*
  nameWithType.vb: DataBrowser.Factory(Of T)(IRepository(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcOpen.Inxton.Data.DataBrowser.Factory(Of T)(TcOpen.Inxton.Data.IRepository(Of T))
  name.vb: Factory(Of T)(IRepository(Of T))
- uid: TcOpen.Inxton.Data.DataBrowser.Create``1(TcOpen.Inxton.Data.IRepository{``0})
  commentId: M:TcOpen.Inxton.Data.DataBrowser.Create``1(TcOpen.Inxton.Data.IRepository{``0})
  id: Create``1(TcOpen.Inxton.Data.IRepository{``0})
  parent: TcOpen.Inxton.Data.DataBrowser
  langs:
  - csharp
  - vb
  name: Create<T>(IRepository<T>)
  nameWithType: DataBrowser.Create<T>(IRepository<T>)
  fullName: TcOpen.Inxton.Data.DataBrowser.Create<T>(TcOpen.Inxton.Data.IRepository<T>)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Create
    path: ../TcOpen/src/TcoData/src/Data/src/DataBrowsers/DataBrowser.cs
    startLine: 349
  assemblies:
  - TcOpen.Inxton.Data
  namespace: TcOpen.Inxton.Data
  syntax:
    content: >-
      public static DataBrowser<T> Create<T>(IRepository<T> repository)

          where T : IBrowsableDataObject, new()
    parameters:
    - id: repository
      type: TcOpen.Inxton.Data.IRepository{{T}}
    typeParameters:
    - id: T
    return:
      type: TcOpen.Inxton.Data.DataBrowser{{T}}
    content.vb: Public Shared Function Create(Of T As {IBrowsableDataObject, New})(repository As IRepository(Of T)) As DataBrowser(Of T)
  overload: TcOpen.Inxton.Data.DataBrowser.Create*
  nameWithType.vb: DataBrowser.Create(Of T)(IRepository(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TcOpen.Inxton.Data.DataBrowser.Create(Of T)(TcOpen.Inxton.Data.IRepository(Of T))
  name.vb: Create(Of T)(IRepository(Of T))
references:
- uid: TcOpen.Inxton.Data
  commentId: N:TcOpen.Inxton.Data
  name: TcOpen.Inxton.Data
  nameWithType: TcOpen.Inxton.Data
  fullName: TcOpen.Inxton.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TcOpen.Inxton.Data.DataBrowser.Factory*
  commentId: Overload:TcOpen.Inxton.Data.DataBrowser.Factory
  name: Factory
  nameWithType: DataBrowser.Factory
  fullName: TcOpen.Inxton.Data.DataBrowser.Factory
- uid: TcOpen.Inxton.Data.IRepository{{T}}
  commentId: T:TcOpen.Inxton.Data.IRepository{`0}
  parent: TcOpen.Inxton.Data
  definition: TcOpen.Inxton.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data.DataBrowser{{T}}
  commentId: T:TcOpen.Inxton.Data.DataBrowser{``0}
  parent: TcOpen.Inxton.Data
  definition: TcOpen.Inxton.Data.DataBrowser`1
  name: DataBrowser<T>
  nameWithType: DataBrowser<T>
  fullName: TcOpen.Inxton.Data.DataBrowser<T>
  nameWithType.vb: DataBrowser(Of T)
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T)
  name.vb: DataBrowser(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data.IRepository`1
  commentId: T:TcOpen.Inxton.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data.DataBrowser`1
  commentId: T:TcOpen.Inxton.Data.DataBrowser`1
  name: DataBrowser<T>
  nameWithType: DataBrowser<T>
  fullName: TcOpen.Inxton.Data.DataBrowser<T>
  nameWithType.vb: DataBrowser(Of T)
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T)
  name.vb: DataBrowser(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data.DataBrowser.Create*
  commentId: Overload:TcOpen.Inxton.Data.DataBrowser.Create
  name: Create
  nameWithType: DataBrowser.Create
  fullName: TcOpen.Inxton.Data.DataBrowser.Create
