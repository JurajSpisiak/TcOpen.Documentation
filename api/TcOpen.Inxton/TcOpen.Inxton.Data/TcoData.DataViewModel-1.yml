### YamlMime:ManagedReference
items:
- uid: TcoData.DataViewModel`1
  commentId: T:TcoData.DataViewModel`1
  id: DataViewModel`1
  parent: TcoData
  children:
  - TcoData.DataViewModel`1.#ctor(TcOpen.Inxton.Data.IRepository{`0},TcoData.TcoDataExchange)
  - TcoData.DataViewModel`1.CancelCreateNewCommand
  - TcoData.DataViewModel`1.CancelEdit
  - TcoData.DataViewModel`1.CancelEditCommand
  - TcoData.DataViewModel`1.CancelEditCommandAvailable
  - TcoData.DataViewModel`1.changes
  - TcoData.DataViewModel`1.Changes
  - TcoData.DataViewModel`1.CreateBrowsable(TcOpen.Inxton.Data.IRepository{`0})
  - TcoData.DataViewModel`1.CreateCopyOfExisting
  - TcoData.DataViewModel`1.CreateCopyOfExistingCommand
  - TcoData.DataViewModel`1.CreateNew
  - TcoData.DataViewModel`1.CreateNewCommand
  - TcoData.DataViewModel`1.CrudDataObject
  - TcoData.DataViewModel`1.DataBrowser
  - TcoData.DataViewModel`1.DataExchange
  - TcoData.DataViewModel`1.Delete
  - TcoData.DataViewModel`1.DeleteCommand
  - TcoData.DataViewModel`1.DeleteCommandAvailable
  - TcoData.DataViewModel`1.EditCommand
  - TcoData.DataViewModel`1.EditCommandAvailable
  - TcoData.DataViewModel`1.ExportCommand
  - TcoData.DataViewModel`1.ExportCommandAvailable
  - TcoData.DataViewModel`1.ExportData
  - TcoData.DataViewModel`1.FillObservableRecords
  - TcoData.DataViewModel`1.Filter
  - TcoData.DataViewModel`1.filterByID
  - TcoData.DataViewModel`1.FilterByID
  - TcoData.DataViewModel`1.FindByCriteriaCommand
  - TcoData.DataViewModel`1.FindById
  - TcoData.DataViewModel`1.ImportCommand
  - TcoData.DataViewModel`1.ImportCommandAvailable
  - TcoData.DataViewModel`1.ImportData
  - TcoData.DataViewModel`1.limit
  - TcoData.DataViewModel`1.Limit
  - TcoData.DataViewModel`1.LoadFromPlc
  - TcoData.DataViewModel`1.LoadFromPlcCommand
  - TcoData.DataViewModel`1.LoadFromPlcCommandAvailable
  - TcoData.DataViewModel`1.mode
  - TcoData.DataViewModel`1.Mode
  - TcoData.DataViewModel`1.observableRecords
  - TcoData.DataViewModel`1.ObservableRecords
  - TcoData.DataViewModel`1.page
  - TcoData.DataViewModel`1.PageDownCommand
  - TcoData.DataViewModel`1.Pages
  - TcoData.DataViewModel`1.PageUpCommand
  - TcoData.DataViewModel`1.PaginationUpEnabled(System.Object)
  - TcoData.DataViewModel`1.PerPageFilter
  - TcoData.DataViewModel`1.recordIdentifier
  - TcoData.DataViewModel`1.RecordIdentifier
  - TcoData.DataViewModel`1.selectedRecord
  - TcoData.DataViewModel`1.SelectedRecord
  - TcoData.DataViewModel`1.SendToPlc
  - TcoData.DataViewModel`1.SendToPlcCommand
  - TcoData.DataViewModel`1.SendToPlcCommandAvailable
  - TcoData.DataViewModel`1.skip
  - TcoData.DataViewModel`1.Skip
  - TcoData.DataViewModel`1.StartCreateCopyOfExisting
  - TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable
  - TcoData.DataViewModel`1.StartCreateNewCommand
  - TcoData.DataViewModel`1.StartCreateNewCommandAvailable
  - TcoData.DataViewModel`1.StartCreatingNew
  - TcoData.DataViewModel`1.StartCreatingRecordCopy
  - TcoData.DataViewModel`1.StartEdit
  - TcoData.DataViewModel`1.Update
  - TcoData.DataViewModel`1.UpdateCommand
  - TcoData.DataViewModel`1.UpdateCommandAvailable
  langs:
  - csharp
  - vb
  name: DataViewModel<T>
  nameWithType: DataViewModel<T>
  fullName: TcoData.DataViewModel<T>
  type: Class
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DataViewModel
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 19
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: 'public class DataViewModel<T> : BindableBase, INotifyPropertyChanged, FunctionAvailability where T : IBrowsableDataObject, new()'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class DataViewModel(Of T As {IBrowsableDataObject, New})
          Inherits BindableBase
          Implements INotifyPropertyChanged, FunctionAvailability
  inheritance:
  - System.Object
  - Vortex.Presentation.BindableBase
  - Vortex.Presentation.Wpf.BindableBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  - TcoData.FunctionAvailability
  inheritedMembers:
  - Vortex.Presentation.BindableBase.SetProperty``1({T}@,{T},System.String)
  - Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
  - Vortex.Presentation.BindableBase.PropertyChanged
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: DataViewModel(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TcoData.DataViewModel(Of T)
  name.vb: DataViewModel(Of T)
- uid: TcoData.DataViewModel`1.filterByID
  commentId: F:TcoData.DataViewModel`1.filterByID
  id: filterByID
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: filterByID
  nameWithType: DataViewModel<T>.filterByID
  fullName: TcoData.DataViewModel<T>.filterByID
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: filterByID
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 21
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: string filterByID
    return:
      type: System.String
    content.vb: filterByID As String
  nameWithType.vb: DataViewModel(Of T).filterByID
  fullName.vb: TcoData.DataViewModel(Of T).filterByID
- uid: TcoData.DataViewModel`1.limit
  commentId: F:TcoData.DataViewModel`1.limit
  id: limit
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: limit
  nameWithType: DataViewModel<T>.limit
  fullName: TcoData.DataViewModel<T>.limit
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: limit
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 23
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: int limit
    return:
      type: System.Int32
    content.vb: limit As Integer
  nameWithType.vb: DataViewModel(Of T).limit
  fullName.vb: TcoData.DataViewModel(Of T).limit
- uid: TcoData.DataViewModel`1.mode
  commentId: F:TcoData.DataViewModel`1.mode
  id: mode
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: DataViewModel<T>.mode
  fullName: TcoData.DataViewModel<T>.mode
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: mode
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 25
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: ViewMode mode
    return:
      type: TcoData.ViewMode
    content.vb: mode As ViewMode
  nameWithType.vb: DataViewModel(Of T).mode
  fullName.vb: TcoData.DataViewModel(Of T).mode
- uid: TcoData.DataViewModel`1.observableRecords
  commentId: F:TcoData.DataViewModel`1.observableRecords
  id: observableRecords
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: observableRecords
  nameWithType: DataViewModel<T>.observableRecords
  fullName: TcoData.DataViewModel<T>.observableRecords
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: observableRecords
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 27
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: readonly ObservableCollection<object> observableRecords
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.Object}
    content.vb: ReadOnly observableRecords As ObservableCollection(Of Object)
  nameWithType.vb: DataViewModel(Of T).observableRecords
  modifiers.csharp:
  - readonly
  modifiers.vb:
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).observableRecords
- uid: TcoData.DataViewModel`1.recordIdentifier
  commentId: F:TcoData.DataViewModel`1.recordIdentifier
  id: recordIdentifier
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: recordIdentifier
  nameWithType: DataViewModel<T>.recordIdentifier
  fullName: TcoData.DataViewModel<T>.recordIdentifier
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: recordIdentifier
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 29
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: string recordIdentifier
    return:
      type: System.String
    content.vb: recordIdentifier As String
  nameWithType.vb: DataViewModel(Of T).recordIdentifier
  fullName.vb: TcoData.DataViewModel(Of T).recordIdentifier
- uid: TcoData.DataViewModel`1.selectedRecord
  commentId: F:TcoData.DataViewModel`1.selectedRecord
  id: selectedRecord
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: selectedRecord
  nameWithType: DataViewModel<T>.selectedRecord
  fullName: TcoData.DataViewModel<T>.selectedRecord
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: selectedRecord
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 31
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: object selectedRecord
    return:
      type: System.Object
    content.vb: selectedRecord As Object
  nameWithType.vb: DataViewModel(Of T).selectedRecord
  fullName.vb: TcoData.DataViewModel(Of T).selectedRecord
- uid: TcoData.DataViewModel`1.skip
  commentId: F:TcoData.DataViewModel`1.skip
  id: skip
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: skip
  nameWithType: DataViewModel<T>.skip
  fullName: TcoData.DataViewModel<T>.skip
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: skip
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 33
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: int skip
    return:
      type: System.Int32
    content.vb: skip As Integer
  nameWithType.vb: DataViewModel(Of T).skip
  fullName.vb: TcoData.DataViewModel(Of T).skip
- uid: TcoData.DataViewModel`1.PerPageFilter
  commentId: P:TcoData.DataViewModel`1.PerPageFilter
  id: PerPageFilter
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: PerPageFilter
  nameWithType: DataViewModel<T>.PerPageFilter
  fullName: TcoData.DataViewModel<T>.PerPageFilter
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: PerPageFilter
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 34
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public IList<int> PerPageFilter { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Int32}
    content.vb: Public ReadOnly Property PerPageFilter As IList(Of Integer)
  overload: TcoData.DataViewModel`1.PerPageFilter*
  nameWithType.vb: DataViewModel(Of T).PerPageFilter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).PerPageFilter
- uid: TcoData.DataViewModel`1.#ctor(TcOpen.Inxton.Data.IRepository{`0},TcoData.TcoDataExchange)
  commentId: M:TcoData.DataViewModel`1.#ctor(TcOpen.Inxton.Data.IRepository{`0},TcoData.TcoDataExchange)
  id: '#ctor(TcOpen.Inxton.Data.IRepository{`0},TcoData.TcoDataExchange)'
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: DataViewModel(IRepository<T>, TcoDataExchange)
  nameWithType: DataViewModel<T>.DataViewModel(IRepository<T>, TcoDataExchange)
  fullName: TcoData.DataViewModel<T>.DataViewModel(TcOpen.Inxton.Data.IRepository<T>, TcoData.TcoDataExchange)
  type: Constructor
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: .ctor
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 36
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public DataViewModel(IRepository<T> repository, TcoDataExchange dataExchange)
    parameters:
    - id: repository
      type: TcOpen.Inxton.Data.IRepository{{T}}
    - id: dataExchange
      type: TcoData.TcoDataExchange
    content.vb: Public Sub New(repository As IRepository(Of T), dataExchange As TcoDataExchange)
  overload: TcoData.DataViewModel`1.#ctor*
  nameWithType.vb: DataViewModel(Of T).DataViewModel(IRepository(Of T), TcoDataExchange)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).DataViewModel(TcOpen.Inxton.Data.IRepository(Of T), TcoData.TcoDataExchange)
  name.vb: DataViewModel(IRepository(Of T), TcoDataExchange)
- uid: TcoData.DataViewModel`1.PaginationUpEnabled(System.Object)
  commentId: M:TcoData.DataViewModel`1.PaginationUpEnabled(System.Object)
  id: PaginationUpEnabled(System.Object)
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: PaginationUpEnabled(Object)
  nameWithType: DataViewModel<T>.PaginationUpEnabled(Object)
  fullName: TcoData.DataViewModel<T>.PaginationUpEnabled(System.Object)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: PaginationUpEnabled
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 73
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: bool PaginationUpEnabled(object arg)
    parameters:
    - id: arg
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Function PaginationUpEnabled(arg As Object) As Boolean
  overload: TcoData.DataViewModel`1.PaginationUpEnabled*
  nameWithType.vb: DataViewModel(Of T).PaginationUpEnabled(Object)
  fullName.vb: TcoData.DataViewModel(Of T).PaginationUpEnabled(System.Object)
- uid: TcoData.DataViewModel`1.CancelEdit
  commentId: M:TcoData.DataViewModel`1.CancelEdit
  id: CancelEdit
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CancelEdit()
  nameWithType: DataViewModel<T>.CancelEdit()
  fullName: TcoData.DataViewModel<T>.CancelEdit()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CancelEdit
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 75
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void CancelEdit()
    content.vb: Sub CancelEdit
  overload: TcoData.DataViewModel`1.CancelEdit*
  nameWithType.vb: DataViewModel(Of T).CancelEdit()
  fullName.vb: TcoData.DataViewModel(Of T).CancelEdit()
- uid: TcoData.DataViewModel`1.StartEdit
  commentId: M:TcoData.DataViewModel`1.StartEdit
  id: StartEdit
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartEdit()
  nameWithType: DataViewModel<T>.StartEdit()
  fullName: TcoData.DataViewModel<T>.StartEdit()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartEdit
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 81
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void StartEdit()
    content.vb: Sub StartEdit
  overload: TcoData.DataViewModel`1.StartEdit*
  nameWithType.vb: DataViewModel(Of T).StartEdit()
  fullName.vb: TcoData.DataViewModel(Of T).StartEdit()
- uid: TcoData.DataViewModel`1.ExportData
  commentId: M:TcoData.DataViewModel`1.ExportData
  id: ExportData
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ExportData()
  nameWithType: DataViewModel<T>.ExportData()
  fullName: TcoData.DataViewModel<T>.ExportData()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ExportData
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 86
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void ExportData()
    content.vb: Sub ExportData
  overload: TcoData.DataViewModel`1.ExportData*
  nameWithType.vb: DataViewModel(Of T).ExportData()
  fullName.vb: TcoData.DataViewModel(Of T).ExportData()
- uid: TcoData.DataViewModel`1.ImportData
  commentId: M:TcoData.DataViewModel`1.ImportData
  id: ImportData
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ImportData()
  nameWithType: DataViewModel<T>.ImportData()
  fullName: TcoData.DataViewModel<T>.ImportData()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ImportData
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 108
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void ImportData()
    content.vb: Sub ImportData
  overload: TcoData.DataViewModel`1.ImportData*
  nameWithType.vb: DataViewModel(Of T).ImportData()
  fullName.vb: TcoData.DataViewModel(Of T).ImportData()
- uid: TcoData.DataViewModel`1.StartCreatingNew
  commentId: M:TcoData.DataViewModel`1.StartCreatingNew
  id: StartCreatingNew
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreatingNew()
  nameWithType: DataViewModel<T>.StartCreatingNew()
  fullName: TcoData.DataViewModel<T>.StartCreatingNew()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreatingNew
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 135
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void StartCreatingNew()
    content.vb: Sub StartCreatingNew
  overload: TcoData.DataViewModel`1.StartCreatingNew*
  nameWithType.vb: DataViewModel(Of T).StartCreatingNew()
  fullName.vb: TcoData.DataViewModel(Of T).StartCreatingNew()
- uid: TcoData.DataViewModel`1.CreateBrowsable(TcOpen.Inxton.Data.IRepository{`0})
  commentId: M:TcoData.DataViewModel`1.CreateBrowsable(TcOpen.Inxton.Data.IRepository{`0})
  id: CreateBrowsable(TcOpen.Inxton.Data.IRepository{`0})
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CreateBrowsable(IRepository<T>)
  nameWithType: DataViewModel<T>.CreateBrowsable(IRepository<T>)
  fullName: TcoData.DataViewModel<T>.CreateBrowsable(TcOpen.Inxton.Data.IRepository<T>)
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CreateBrowsable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 140
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: DataBrowser<T> CreateBrowsable(IRepository<T> repository)
    parameters:
    - id: repository
      type: TcOpen.Inxton.Data.IRepository{{T}}
    return:
      type: TcOpen.Inxton.Data.DataBrowser{{T}}
    content.vb: Function CreateBrowsable(repository As IRepository(Of T)) As DataBrowser(Of T)
  overload: TcoData.DataViewModel`1.CreateBrowsable*
  nameWithType.vb: DataViewModel(Of T).CreateBrowsable(IRepository(Of T))
  fullName.vb: TcoData.DataViewModel(Of T).CreateBrowsable(TcOpen.Inxton.Data.IRepository(Of T))
  name.vb: CreateBrowsable(IRepository(Of T))
- uid: TcoData.DataViewModel`1.CreateCopyOfExisting
  commentId: M:TcoData.DataViewModel`1.CreateCopyOfExisting
  id: CreateCopyOfExisting
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CreateCopyOfExisting()
  nameWithType: DataViewModel<T>.CreateCopyOfExisting()
  fullName: TcoData.DataViewModel<T>.CreateCopyOfExisting()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CreateCopyOfExisting
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 148
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void CreateCopyOfExisting()
    content.vb: Sub CreateCopyOfExisting
  overload: TcoData.DataViewModel`1.CreateCopyOfExisting*
  nameWithType.vb: DataViewModel(Of T).CreateCopyOfExisting()
  fullName.vb: TcoData.DataViewModel(Of T).CreateCopyOfExisting()
- uid: TcoData.DataViewModel`1.CreateNew
  commentId: M:TcoData.DataViewModel`1.CreateNew
  id: CreateNew
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: DataViewModel<T>.CreateNew()
  fullName: TcoData.DataViewModel<T>.CreateNew()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CreateNew
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 164
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void CreateNew()
    content.vb: Sub CreateNew
  overload: TcoData.DataViewModel`1.CreateNew*
  nameWithType.vb: DataViewModel(Of T).CreateNew()
  fullName.vb: TcoData.DataViewModel(Of T).CreateNew()
- uid: TcoData.DataViewModel`1.Delete
  commentId: M:TcoData.DataViewModel`1.Delete
  id: Delete
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: DataViewModel<T>.Delete()
  fullName: TcoData.DataViewModel<T>.Delete()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Delete
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 182
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void Delete()
    content.vb: Sub Delete
  overload: TcoData.DataViewModel`1.Delete*
  nameWithType.vb: DataViewModel(Of T).Delete()
  fullName.vb: TcoData.DataViewModel(Of T).Delete()
- uid: TcoData.DataViewModel`1.Filter
  commentId: M:TcoData.DataViewModel`1.Filter
  id: Filter
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Filter()
  nameWithType: DataViewModel<T>.Filter()
  fullName: TcoData.DataViewModel<T>.Filter()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Filter
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 199
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void Filter()
    content.vb: Sub Filter
  overload: TcoData.DataViewModel`1.Filter*
  nameWithType.vb: DataViewModel(Of T).Filter()
  fullName.vb: TcoData.DataViewModel(Of T).Filter()
- uid: TcoData.DataViewModel`1.FindById
  commentId: M:TcoData.DataViewModel`1.FindById
  id: FindById
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: FindById()
  nameWithType: DataViewModel<T>.FindById()
  fullName: TcoData.DataViewModel<T>.FindById()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: FindById
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 204
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void FindById()
    content.vb: Sub FindById
  overload: TcoData.DataViewModel`1.FindById*
  nameWithType.vb: DataViewModel(Of T).FindById()
  fullName.vb: TcoData.DataViewModel(Of T).FindById()
- uid: TcoData.DataViewModel`1.SendToPlc
  commentId: M:TcoData.DataViewModel`1.SendToPlc
  id: SendToPlc
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: SendToPlc()
  nameWithType: DataViewModel<T>.SendToPlc()
  fullName: TcoData.DataViewModel<T>.SendToPlc()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: SendToPlc
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 212
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void SendToPlc()
    content.vb: Sub SendToPlc
  overload: TcoData.DataViewModel`1.SendToPlc*
  nameWithType.vb: DataViewModel(Of T).SendToPlc()
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlc()
- uid: TcoData.DataViewModel`1.StartCreatingRecordCopy
  commentId: M:TcoData.DataViewModel`1.StartCreatingRecordCopy
  id: StartCreatingRecordCopy
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreatingRecordCopy()
  nameWithType: DataViewModel<T>.StartCreatingRecordCopy()
  fullName: TcoData.DataViewModel<T>.StartCreatingRecordCopy()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreatingRecordCopy
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 224
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void StartCreatingRecordCopy()
    content.vb: Sub StartCreatingRecordCopy
  overload: TcoData.DataViewModel`1.StartCreatingRecordCopy*
  nameWithType.vb: DataViewModel(Of T).StartCreatingRecordCopy()
  fullName.vb: TcoData.DataViewModel(Of T).StartCreatingRecordCopy()
- uid: TcoData.DataViewModel`1.CrudDataObject
  commentId: P:TcoData.DataViewModel`1.CrudDataObject
  id: CrudDataObject
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CrudDataObject
  nameWithType: DataViewModel<T>.CrudDataObject
  fullName: TcoData.DataViewModel<T>.CrudDataObject
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CrudDataObject
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 231
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: >-
      ICrudDataObject CrudDataObject

      {

      }
    parameters: []
    return:
      type: TcoData.ICrudDataObject
    content.vb: ReadOnly WriteOnly Property CrudDataObject As ICrudDataObject
  overload: TcoData.DataViewModel`1.CrudDataObject*
  nameWithType.vb: DataViewModel(Of T).CrudDataObject
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).CrudDataObject
- uid: TcoData.DataViewModel`1.Update
  commentId: M:TcoData.DataViewModel`1.Update
  id: Update
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DataViewModel<T>.Update()
  fullName: TcoData.DataViewModel<T>.Update()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Update
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 242
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void Update()
    content.vb: Sub Update
  overload: TcoData.DataViewModel`1.Update*
  nameWithType.vb: DataViewModel(Of T).Update()
  fullName.vb: TcoData.DataViewModel(Of T).Update()
- uid: TcoData.DataViewModel`1.page
  commentId: P:TcoData.DataViewModel`1.page
  id: page
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: page
  nameWithType: DataViewModel<T>.page
  fullName: TcoData.DataViewModel<T>.page
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: page
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 257
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: >-
      int page

      {

      }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly WriteOnly Property page As Integer
  overload: TcoData.DataViewModel`1.page*
  nameWithType.vb: DataViewModel(Of T).page
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).page
- uid: TcoData.DataViewModel`1.FillObservableRecords
  commentId: M:TcoData.DataViewModel`1.FillObservableRecords
  id: FillObservableRecords
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: FillObservableRecords()
  nameWithType: DataViewModel<T>.FillObservableRecords()
  fullName: TcoData.DataViewModel<T>.FillObservableRecords()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: FillObservableRecords
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 270
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void FillObservableRecords()
    content.vb: Sub FillObservableRecords
  overload: TcoData.DataViewModel`1.FillObservableRecords*
  nameWithType.vb: DataViewModel(Of T).FillObservableRecords()
  fullName.vb: TcoData.DataViewModel(Of T).FillObservableRecords()
- uid: TcoData.DataViewModel`1.LoadFromPlc
  commentId: M:TcoData.DataViewModel`1.LoadFromPlc
  id: LoadFromPlc
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: LoadFromPlc()
  nameWithType: DataViewModel<T>.LoadFromPlc()
  fullName: TcoData.DataViewModel<T>.LoadFromPlc()
  type: Method
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: LoadFromPlc
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 279
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: void LoadFromPlc()
    content.vb: Sub LoadFromPlc
  overload: TcoData.DataViewModel`1.LoadFromPlc*
  nameWithType.vb: DataViewModel(Of T).LoadFromPlc()
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlc()
- uid: TcoData.DataViewModel`1.ExportCommand
  commentId: P:TcoData.DataViewModel`1.ExportCommand
  id: ExportCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ExportCommand
  nameWithType: DataViewModel<T>.ExportCommand
  fullName: TcoData.DataViewModel<T>.ExportCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ExportCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 295
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand ExportCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property ExportCommand As RelayCommand
  overload: TcoData.DataViewModel`1.ExportCommand*
  nameWithType.vb: DataViewModel(Of T).ExportCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).ExportCommand
- uid: TcoData.DataViewModel`1.ImportCommand
  commentId: P:TcoData.DataViewModel`1.ImportCommand
  id: ImportCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ImportCommand
  nameWithType: DataViewModel<T>.ImportCommand
  fullName: TcoData.DataViewModel<T>.ImportCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ImportCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 296
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand ImportCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property ImportCommand As RelayCommand
  overload: TcoData.DataViewModel`1.ImportCommand*
  nameWithType.vb: DataViewModel(Of T).ImportCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).ImportCommand
- uid: TcoData.DataViewModel`1.CancelCreateNewCommand
  commentId: P:TcoData.DataViewModel`1.CancelCreateNewCommand
  id: CancelCreateNewCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CancelCreateNewCommand
  nameWithType: DataViewModel<T>.CancelCreateNewCommand
  fullName: TcoData.DataViewModel<T>.CancelCreateNewCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CancelCreateNewCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 298
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand CancelCreateNewCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property CancelCreateNewCommand As RelayCommand
  overload: TcoData.DataViewModel`1.CancelCreateNewCommand*
  nameWithType.vb: DataViewModel(Of T).CancelCreateNewCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).CancelCreateNewCommand
- uid: TcoData.DataViewModel`1.CancelEditCommand
  commentId: P:TcoData.DataViewModel`1.CancelEditCommand
  id: CancelEditCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CancelEditCommand
  nameWithType: DataViewModel<T>.CancelEditCommand
  fullName: TcoData.DataViewModel<T>.CancelEditCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CancelEditCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 303
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand CancelEditCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property CancelEditCommand As RelayCommand
  overload: TcoData.DataViewModel`1.CancelEditCommand*
  nameWithType.vb: DataViewModel(Of T).CancelEditCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).CancelEditCommand
- uid: TcoData.DataViewModel`1.CreateCopyOfExistingCommand
  commentId: P:TcoData.DataViewModel`1.CreateCopyOfExistingCommand
  id: CreateCopyOfExistingCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CreateCopyOfExistingCommand
  nameWithType: DataViewModel<T>.CreateCopyOfExistingCommand
  fullName: TcoData.DataViewModel<T>.CreateCopyOfExistingCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CreateCopyOfExistingCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 308
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand CreateCopyOfExistingCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property CreateCopyOfExistingCommand As RelayCommand
  overload: TcoData.DataViewModel`1.CreateCopyOfExistingCommand*
  nameWithType.vb: DataViewModel(Of T).CreateCopyOfExistingCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).CreateCopyOfExistingCommand
- uid: TcoData.DataViewModel`1.CreateNewCommand
  commentId: P:TcoData.DataViewModel`1.CreateNewCommand
  id: CreateNewCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CreateNewCommand
  nameWithType: DataViewModel<T>.CreateNewCommand
  fullName: TcoData.DataViewModel<T>.CreateNewCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CreateNewCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 313
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand CreateNewCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property CreateNewCommand As RelayCommand
  overload: TcoData.DataViewModel`1.CreateNewCommand*
  nameWithType.vb: DataViewModel(Of T).CreateNewCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).CreateNewCommand
- uid: TcoData.DataViewModel`1.DataBrowser
  commentId: P:TcoData.DataViewModel`1.DataBrowser
  id: DataBrowser
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: DataBrowser
  nameWithType: DataViewModel<T>.DataBrowser
  fullName: TcoData.DataViewModel<T>.DataBrowser
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DataBrowser
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 318
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public DataBrowser<T> DataBrowser { get; set; }
    parameters: []
    return:
      type: TcOpen.Inxton.Data.DataBrowser{{T}}
    content.vb: Public Property DataBrowser As DataBrowser(Of T)
  overload: TcoData.DataViewModel`1.DataBrowser*
  nameWithType.vb: DataViewModel(Of T).DataBrowser
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).DataBrowser
- uid: TcoData.DataViewModel`1.DataExchange
  commentId: P:TcoData.DataViewModel`1.DataExchange
  id: DataExchange
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: DataExchange
  nameWithType: DataViewModel<T>.DataExchange
  fullName: TcoData.DataViewModel<T>.DataExchange
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DataExchange
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 323
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public TcoDataExchange DataExchange { get; set; }
    parameters: []
    return:
      type: TcoData.TcoDataExchange
    content.vb: Public Property DataExchange As TcoDataExchange
  overload: TcoData.DataViewModel`1.DataExchange*
  nameWithType.vb: DataViewModel(Of T).DataExchange
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).DataExchange
- uid: TcoData.DataViewModel`1.DeleteCommand
  commentId: P:TcoData.DataViewModel`1.DeleteCommand
  id: DeleteCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: DeleteCommand
  nameWithType: DataViewModel<T>.DeleteCommand
  fullName: TcoData.DataViewModel<T>.DeleteCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DeleteCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 328
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand DeleteCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property DeleteCommand As RelayCommand
  overload: TcoData.DataViewModel`1.DeleteCommand*
  nameWithType.vb: DataViewModel(Of T).DeleteCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).DeleteCommand
- uid: TcoData.DataViewModel`1.EditCommand
  commentId: P:TcoData.DataViewModel`1.EditCommand
  id: EditCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: EditCommand
  nameWithType: DataViewModel<T>.EditCommand
  fullName: TcoData.DataViewModel<T>.EditCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: EditCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 333
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand EditCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property EditCommand As RelayCommand
  overload: TcoData.DataViewModel`1.EditCommand*
  nameWithType.vb: DataViewModel(Of T).EditCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).EditCommand
- uid: TcoData.DataViewModel`1.PageUpCommand
  commentId: P:TcoData.DataViewModel`1.PageUpCommand
  id: PageUpCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: PageUpCommand
  nameWithType: DataViewModel<T>.PageUpCommand
  fullName: TcoData.DataViewModel<T>.PageUpCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: PageUpCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 338
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand PageUpCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property PageUpCommand As RelayCommand
  overload: TcoData.DataViewModel`1.PageUpCommand*
  nameWithType.vb: DataViewModel(Of T).PageUpCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).PageUpCommand
- uid: TcoData.DataViewModel`1.PageDownCommand
  commentId: P:TcoData.DataViewModel`1.PageDownCommand
  id: PageDownCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: PageDownCommand
  nameWithType: DataViewModel<T>.PageDownCommand
  fullName: TcoData.DataViewModel<T>.PageDownCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: PageDownCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 339
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand PageDownCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property PageDownCommand As RelayCommand
  overload: TcoData.DataViewModel`1.PageDownCommand*
  nameWithType.vb: DataViewModel(Of T).PageDownCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).PageDownCommand
- uid: TcoData.DataViewModel`1.FilterByID
  commentId: P:TcoData.DataViewModel`1.FilterByID
  id: FilterByID
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: FilterByID
  nameWithType: DataViewModel<T>.FilterByID
  fullName: TcoData.DataViewModel<T>.FilterByID
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: FilterByID
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 341
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public string FilterByID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilterByID As String
  overload: TcoData.DataViewModel`1.FilterByID*
  nameWithType.vb: DataViewModel(Of T).FilterByID
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).FilterByID
- uid: TcoData.DataViewModel`1.FindByCriteriaCommand
  commentId: P:TcoData.DataViewModel`1.FindByCriteriaCommand
  id: FindByCriteriaCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: FindByCriteriaCommand
  nameWithType: DataViewModel<T>.FindByCriteriaCommand
  fullName: TcoData.DataViewModel<T>.FindByCriteriaCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: FindByCriteriaCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 363
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand FindByCriteriaCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property FindByCriteriaCommand As RelayCommand
  overload: TcoData.DataViewModel`1.FindByCriteriaCommand*
  nameWithType.vb: DataViewModel(Of T).FindByCriteriaCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).FindByCriteriaCommand
- uid: TcoData.DataViewModel`1.Mode
  commentId: P:TcoData.DataViewModel`1.Mode
  id: Mode
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Mode
  nameWithType: DataViewModel<T>.Mode
  fullName: TcoData.DataViewModel<T>.Mode
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Mode
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 368
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public ViewMode Mode { get; set; }
    parameters: []
    return:
      type: TcoData.ViewMode
    content.vb: Public Property Mode As ViewMode
  overload: TcoData.DataViewModel`1.Mode*
  nameWithType.vb: DataViewModel(Of T).Mode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).Mode
- uid: TcoData.DataViewModel`1.Limit
  commentId: P:TcoData.DataViewModel`1.Limit
  id: Limit
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: DataViewModel<T>.Limit
  fullName: TcoData.DataViewModel<T>.Limit
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Limit
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 386
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public int Limit { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Limit As Integer
  overload: TcoData.DataViewModel`1.Limit*
  nameWithType.vb: DataViewModel(Of T).Limit
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).Limit
- uid: TcoData.DataViewModel`1.Skip
  commentId: P:TcoData.DataViewModel`1.Skip
  id: Skip
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: DataViewModel<T>.Skip
  fullName: TcoData.DataViewModel<T>.Skip
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Skip
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 414
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public int Skip { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Skip As Integer
  overload: TcoData.DataViewModel`1.Skip*
  nameWithType.vb: DataViewModel(Of T).Skip
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).Skip
- uid: TcoData.DataViewModel`1.Pages
  commentId: P:TcoData.DataViewModel`1.Pages
  id: Pages
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: DataViewModel<T>.Pages
  fullName: TcoData.DataViewModel<T>.Pages
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Pages
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 432
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public long Pages { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Pages As Long
  overload: TcoData.DataViewModel`1.Pages*
  nameWithType.vb: DataViewModel(Of T).Pages
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).Pages
- uid: TcoData.DataViewModel`1.ObservableRecords
  commentId: P:TcoData.DataViewModel`1.ObservableRecords
  id: ObservableRecords
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ObservableRecords
  nameWithType: DataViewModel<T>.ObservableRecords
  fullName: TcoData.DataViewModel<T>.ObservableRecords
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ObservableRecords
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 443
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public ObservableCollection<object> ObservableRecords { get; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{System.Object}
    content.vb: Public ReadOnly Property ObservableRecords As ObservableCollection(Of Object)
  overload: TcoData.DataViewModel`1.ObservableRecords*
  nameWithType.vb: DataViewModel(Of T).ObservableRecords
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).ObservableRecords
- uid: TcoData.DataViewModel`1.RecordIdentifier
  commentId: P:TcoData.DataViewModel`1.RecordIdentifier
  id: RecordIdentifier
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: RecordIdentifier
  nameWithType: DataViewModel<T>.RecordIdentifier
  fullName: TcoData.DataViewModel<T>.RecordIdentifier
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: RecordIdentifier
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 451
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public string RecordIdentifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RecordIdentifier As String
  overload: TcoData.DataViewModel`1.RecordIdentifier*
  nameWithType.vb: DataViewModel(Of T).RecordIdentifier
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).RecordIdentifier
- uid: TcoData.DataViewModel`1.changes
  commentId: F:TcoData.DataViewModel`1.changes
  id: changes
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: changes
  nameWithType: DataViewModel<T>.changes
  fullName: TcoData.DataViewModel<T>.changes
  type: Field
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: changes
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 468
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: List<ValueChangeItem> changes
    return:
      type: System.Collections.Generic.List{TcoData.ValueChangeItem}
    content.vb: changes As List(Of ValueChangeItem)
  nameWithType.vb: DataViewModel(Of T).changes
  fullName.vb: TcoData.DataViewModel(Of T).changes
- uid: TcoData.DataViewModel`1.Changes
  commentId: P:TcoData.DataViewModel`1.Changes
  id: Changes
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: Changes
  nameWithType: DataViewModel<T>.Changes
  fullName: TcoData.DataViewModel<T>.Changes
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Changes
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 469
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public List<ValueChangeItem> Changes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TcoData.ValueChangeItem}
    content.vb: Public Property Changes As List(Of ValueChangeItem)
  overload: TcoData.DataViewModel`1.Changes*
  nameWithType.vb: DataViewModel(Of T).Changes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).Changes
- uid: TcoData.DataViewModel`1.SelectedRecord
  commentId: P:TcoData.DataViewModel`1.SelectedRecord
  id: SelectedRecord
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: SelectedRecord
  nameWithType: DataViewModel<T>.SelectedRecord
  fullName: TcoData.DataViewModel<T>.SelectedRecord
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: SelectedRecord
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 481
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public object SelectedRecord { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property SelectedRecord As Object
  overload: TcoData.DataViewModel`1.SelectedRecord*
  nameWithType.vb: DataViewModel(Of T).SelectedRecord
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).SelectedRecord
- uid: TcoData.DataViewModel`1.SendToPlcCommand
  commentId: P:TcoData.DataViewModel`1.SendToPlcCommand
  id: SendToPlcCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: SendToPlcCommand
  nameWithType: DataViewModel<T>.SendToPlcCommand
  fullName: TcoData.DataViewModel<T>.SendToPlcCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: SendToPlcCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 512
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand SendToPlcCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property SendToPlcCommand As RelayCommand
  overload: TcoData.DataViewModel`1.SendToPlcCommand*
  nameWithType.vb: DataViewModel(Of T).SendToPlcCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlcCommand
- uid: TcoData.DataViewModel`1.LoadFromPlcCommand
  commentId: P:TcoData.DataViewModel`1.LoadFromPlcCommand
  id: LoadFromPlcCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: LoadFromPlcCommand
  nameWithType: DataViewModel<T>.LoadFromPlcCommand
  fullName: TcoData.DataViewModel<T>.LoadFromPlcCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: LoadFromPlcCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 517
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand LoadFromPlcCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property LoadFromPlcCommand As RelayCommand
  overload: TcoData.DataViewModel`1.LoadFromPlcCommand*
  nameWithType.vb: DataViewModel(Of T).LoadFromPlcCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlcCommand
- uid: TcoData.DataViewModel`1.StartCreateCopyOfExisting
  commentId: P:TcoData.DataViewModel`1.StartCreateCopyOfExisting
  id: StartCreateCopyOfExisting
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreateCopyOfExisting
  nameWithType: DataViewModel<T>.StartCreateCopyOfExisting
  fullName: TcoData.DataViewModel<T>.StartCreateCopyOfExisting
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreateCopyOfExisting
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 519
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand StartCreateCopyOfExisting { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property StartCreateCopyOfExisting As RelayCommand
  overload: TcoData.DataViewModel`1.StartCreateCopyOfExisting*
  nameWithType.vb: DataViewModel(Of T).StartCreateCopyOfExisting
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateCopyOfExisting
- uid: TcoData.DataViewModel`1.StartCreateNewCommand
  commentId: P:TcoData.DataViewModel`1.StartCreateNewCommand
  id: StartCreateNewCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreateNewCommand
  nameWithType: DataViewModel<T>.StartCreateNewCommand
  fullName: TcoData.DataViewModel<T>.StartCreateNewCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreateNewCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 524
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand StartCreateNewCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property StartCreateNewCommand As RelayCommand
  overload: TcoData.DataViewModel`1.StartCreateNewCommand*
  nameWithType.vb: DataViewModel(Of T).StartCreateNewCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateNewCommand
- uid: TcoData.DataViewModel`1.UpdateCommand
  commentId: P:TcoData.DataViewModel`1.UpdateCommand
  id: UpdateCommand
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: UpdateCommand
  nameWithType: DataViewModel<T>.UpdateCommand
  fullName: TcoData.DataViewModel<T>.UpdateCommand
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: UpdateCommand
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 529
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public RelayCommand UpdateCommand { get; }
    parameters: []
    return:
      type: Vortex.Presentation.Wpf.RelayCommand
    content.vb: Public ReadOnly Property UpdateCommand As RelayCommand
  overload: TcoData.DataViewModel`1.UpdateCommand*
  nameWithType.vb: DataViewModel(Of T).UpdateCommand
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TcoData.DataViewModel(Of T).UpdateCommand
- uid: TcoData.DataViewModel`1.StartCreateNewCommandAvailable
  commentId: P:TcoData.DataViewModel`1.StartCreateNewCommandAvailable
  id: StartCreateNewCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreateNewCommandAvailable
  nameWithType: DataViewModel<T>.StartCreateNewCommandAvailable
  fullName: TcoData.DataViewModel<T>.StartCreateNewCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreateNewCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 534
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool StartCreateNewCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StartCreateNewCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.StartCreateNewCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.StartCreateNewCommandAvailable
  nameWithType.vb: DataViewModel(Of T).StartCreateNewCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateNewCommandAvailable
- uid: TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable
  commentId: P:TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable
  id: StartCreateCopyOfExistingAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: StartCreateCopyOfExistingAvailable
  nameWithType: DataViewModel<T>.StartCreateCopyOfExistingAvailable
  fullName: TcoData.DataViewModel<T>.StartCreateCopyOfExistingAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: StartCreateCopyOfExistingAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 535
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool StartCreateCopyOfExistingAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property StartCreateCopyOfExistingAvailable As Boolean
  overload: TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable*
  implements:
  - TcoData.FunctionAvailability.StartCreateCopyOfExistingAvailable
  nameWithType.vb: DataViewModel(Of T).StartCreateCopyOfExistingAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateCopyOfExistingAvailable
- uid: TcoData.DataViewModel`1.UpdateCommandAvailable
  commentId: P:TcoData.DataViewModel`1.UpdateCommandAvailable
  id: UpdateCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: UpdateCommandAvailable
  nameWithType: DataViewModel<T>.UpdateCommandAvailable
  fullName: TcoData.DataViewModel<T>.UpdateCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: UpdateCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 536
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool UpdateCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UpdateCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.UpdateCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.UpdateCommandAvailable
  nameWithType.vb: DataViewModel(Of T).UpdateCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).UpdateCommandAvailable
- uid: TcoData.DataViewModel`1.CancelEditCommandAvailable
  commentId: P:TcoData.DataViewModel`1.CancelEditCommandAvailable
  id: CancelEditCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: CancelEditCommandAvailable
  nameWithType: DataViewModel<T>.CancelEditCommandAvailable
  fullName: TcoData.DataViewModel<T>.CancelEditCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: CancelEditCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 537
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool CancelEditCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CancelEditCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.CancelEditCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.CancelEditCommandAvailable
  nameWithType.vb: DataViewModel(Of T).CancelEditCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).CancelEditCommandAvailable
- uid: TcoData.DataViewModel`1.DeleteCommandAvailable
  commentId: P:TcoData.DataViewModel`1.DeleteCommandAvailable
  id: DeleteCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: DeleteCommandAvailable
  nameWithType: DataViewModel<T>.DeleteCommandAvailable
  fullName: TcoData.DataViewModel<T>.DeleteCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: DeleteCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 538
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool DeleteCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeleteCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.DeleteCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.DeleteCommandAvailable
  nameWithType.vb: DataViewModel(Of T).DeleteCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).DeleteCommandAvailable
- uid: TcoData.DataViewModel`1.EditCommandAvailable
  commentId: P:TcoData.DataViewModel`1.EditCommandAvailable
  id: EditCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: EditCommandAvailable
  nameWithType: DataViewModel<T>.EditCommandAvailable
  fullName: TcoData.DataViewModel<T>.EditCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: EditCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 539
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool EditCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property EditCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.EditCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.EditCommandAvailable
  nameWithType.vb: DataViewModel(Of T).EditCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).EditCommandAvailable
- uid: TcoData.DataViewModel`1.SendToPlcCommandAvailable
  commentId: P:TcoData.DataViewModel`1.SendToPlcCommandAvailable
  id: SendToPlcCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: SendToPlcCommandAvailable
  nameWithType: DataViewModel<T>.SendToPlcCommandAvailable
  fullName: TcoData.DataViewModel<T>.SendToPlcCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: SendToPlcCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 540
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool SendToPlcCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SendToPlcCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.SendToPlcCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.SendToPlcCommandAvailable
  nameWithType.vb: DataViewModel(Of T).SendToPlcCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlcCommandAvailable
- uid: TcoData.DataViewModel`1.LoadFromPlcCommandAvailable
  commentId: P:TcoData.DataViewModel`1.LoadFromPlcCommandAvailable
  id: LoadFromPlcCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: LoadFromPlcCommandAvailable
  nameWithType: DataViewModel<T>.LoadFromPlcCommandAvailable
  fullName: TcoData.DataViewModel<T>.LoadFromPlcCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: LoadFromPlcCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 541
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool LoadFromPlcCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LoadFromPlcCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.LoadFromPlcCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.LoadFromPlcCommandAvailable
  nameWithType.vb: DataViewModel(Of T).LoadFromPlcCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlcCommandAvailable
- uid: TcoData.DataViewModel`1.ExportCommandAvailable
  commentId: P:TcoData.DataViewModel`1.ExportCommandAvailable
  id: ExportCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ExportCommandAvailable
  nameWithType: DataViewModel<T>.ExportCommandAvailable
  fullName: TcoData.DataViewModel<T>.ExportCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ExportCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 542
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool ExportCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExportCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.ExportCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.ExportCommandAvailable
  nameWithType.vb: DataViewModel(Of T).ExportCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).ExportCommandAvailable
- uid: TcoData.DataViewModel`1.ImportCommandAvailable
  commentId: P:TcoData.DataViewModel`1.ImportCommandAvailable
  id: ImportCommandAvailable
  parent: TcoData.DataViewModel`1
  langs:
  - csharp
  - vb
  name: ImportCommandAvailable
  nameWithType: DataViewModel<T>.ImportCommandAvailable
  fullName: TcoData.DataViewModel<T>.ImportCommandAvailable
  type: Property
  source:
    remote:
      path: src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: ImportCommandAvailable
    path: ../TcOpen/src/TcoData/src/Wpf/TcoData.Wpf/Data/Data/DataViewModel.cs
    startLine: 543
  assemblies:
  - TcOpen.Inxton.Data.Wpf
  namespace: TcoData
  syntax:
    content: public bool ImportCommandAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ImportCommandAvailable As Boolean
  overload: TcoData.DataViewModel`1.ImportCommandAvailable*
  implements:
  - TcoData.FunctionAvailability.ImportCommandAvailable
  nameWithType.vb: DataViewModel(Of T).ImportCommandAvailable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: TcoData.DataViewModel(Of T).ImportCommandAvailable
references:
- uid: TcoData
  commentId: N:TcoData
  name: TcoData
  nameWithType: TcoData
  fullName: TcoData
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vortex.Presentation.BindableBase
  commentId: T:Vortex.Presentation.BindableBase
  parent: Vortex.Presentation
  isExternal: true
  name: BindableBase
  nameWithType: BindableBase
  fullName: Vortex.Presentation.BindableBase
- uid: Vortex.Presentation.Wpf.BindableBase
  commentId: T:Vortex.Presentation.Wpf.BindableBase
  parent: Vortex.Presentation.Wpf
  isExternal: true
  name: BindableBase
  nameWithType: BindableBase
  fullName: Vortex.Presentation.Wpf.BindableBase
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: TcoData.FunctionAvailability
  commentId: T:TcoData.FunctionAvailability
  parent: TcoData
  name: FunctionAvailability
  nameWithType: FunctionAvailability
  fullName: TcoData.FunctionAvailability
- uid: Vortex.Presentation.BindableBase.SetProperty``1({T}@,{T},System.String)
  commentId: M:Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
  parent: Vortex.Presentation.BindableBase
  definition: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
  name: SetProperty<T>(T, T, String)
  nameWithType: BindableBase.SetProperty<T>(T, T, String)
  fullName: Vortex.Presentation.BindableBase.SetProperty<T>(T, T, System.String)
  nameWithType.vb: BindableBase.SetProperty(Of T)(T, T, String)
  fullName.vb: Vortex.Presentation.BindableBase.SetProperty(Of T)(T, T, System.String)
  name.vb: SetProperty(Of T)(T, T, String)
  spec.csharp:
  - uid: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty<T>
    nameWithType: BindableBase.SetProperty<T>
    fullName: Vortex.Presentation.BindableBase.SetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty(Of T)
    nameWithType: BindableBase.SetProperty(Of T)
    fullName: Vortex.Presentation.BindableBase.SetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
  commentId: M:Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
  parent: Vortex.Presentation.BindableBase
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: BindableBase.OnPropertyChanged(String)
  fullName: Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
  spec.csharp:
  - uid: Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: BindableBase.OnPropertyChanged
    fullName: Vortex.Presentation.BindableBase.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Presentation.BindableBase.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: BindableBase.OnPropertyChanged
    fullName: Vortex.Presentation.BindableBase.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vortex.Presentation.BindableBase.PropertyChanged
  commentId: E:Vortex.Presentation.BindableBase.PropertyChanged
  parent: Vortex.Presentation.BindableBase
  isExternal: true
  name: PropertyChanged
  nameWithType: BindableBase.PropertyChanged
  fullName: Vortex.Presentation.BindableBase.PropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Vortex.Presentation
  commentId: N:Vortex.Presentation
  isExternal: true
  name: Vortex.Presentation
  nameWithType: Vortex.Presentation
  fullName: Vortex.Presentation
- uid: Vortex.Presentation.Wpf
  commentId: N:Vortex.Presentation.Wpf
  isExternal: true
  name: Vortex.Presentation.Wpf
  nameWithType: Vortex.Presentation.Wpf
  fullName: Vortex.Presentation.Wpf
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
  commentId: M:Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
  isExternal: true
  name: SetProperty<T>(T, T, String)
  nameWithType: BindableBase.SetProperty<T>(T, T, String)
  fullName: Vortex.Presentation.BindableBase.SetProperty<T>(T, T, System.String)
  nameWithType.vb: BindableBase.SetProperty(Of T)(T, T, String)
  fullName.vb: Vortex.Presentation.BindableBase.SetProperty(Of T)(T, T, System.String)
  name.vb: SetProperty(Of T)(T, T, String)
  spec.csharp:
  - uid: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty<T>
    nameWithType: BindableBase.SetProperty<T>
    fullName: Vortex.Presentation.BindableBase.SetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vortex.Presentation.BindableBase.SetProperty``1(``0@,``0,System.String)
    name: SetProperty(Of T)
    nameWithType: BindableBase.SetProperty(Of T)
    fullName: Vortex.Presentation.BindableBase.SetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TcoData.ViewMode
  commentId: T:TcoData.ViewMode
  parent: TcoData
  name: ViewMode
  nameWithType: ViewMode
  fullName: TcoData.ViewMode
- uid: System.Collections.ObjectModel.ObservableCollection{System.Object}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{System.Object}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<Object>
  nameWithType: ObservableCollection<Object>
  fullName: System.Collections.ObjectModel.ObservableCollection<System.Object>
  nameWithType.vb: ObservableCollection(Of Object)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of System.Object)
  name.vb: ObservableCollection(Of Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: TcoData.DataViewModel`1.PerPageFilter*
  commentId: Overload:TcoData.DataViewModel`1.PerPageFilter
  name: PerPageFilter
  nameWithType: DataViewModel<T>.PerPageFilter
  fullName: TcoData.DataViewModel<T>.PerPageFilter
  nameWithType.vb: DataViewModel(Of T).PerPageFilter
  fullName.vb: TcoData.DataViewModel(Of T).PerPageFilter
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Int32>
  nameWithType: IList<Int32>
  fullName: System.Collections.Generic.IList<System.Int32>
  nameWithType.vb: IList(Of Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Int32)
  name.vb: IList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TcoData.DataViewModel`1.#ctor*
  commentId: Overload:TcoData.DataViewModel`1.#ctor
  name: DataViewModel
  nameWithType: DataViewModel<T>.DataViewModel
  fullName: TcoData.DataViewModel<T>.DataViewModel
  nameWithType.vb: DataViewModel(Of T).DataViewModel
  fullName.vb: TcoData.DataViewModel(Of T).DataViewModel
- uid: TcOpen.Inxton.Data.IRepository{{T}}
  commentId: T:TcOpen.Inxton.Data.IRepository{`0}
  parent: TcOpen.Inxton.Data
  definition: TcOpen.Inxton.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcoData.TcoDataExchange
  commentId: T:TcoData.TcoDataExchange
  parent: TcoData
  name: TcoDataExchange
  nameWithType: TcoDataExchange
  fullName: TcoData.TcoDataExchange
- uid: TcOpen.Inxton.Data.IRepository`1
  commentId: T:TcOpen.Inxton.Data.IRepository`1
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: TcOpen.Inxton.Data.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: TcOpen.Inxton.Data.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.IRepository`1
    name: IRepository
    nameWithType: IRepository
    fullName: TcOpen.Inxton.Data.IRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data
  commentId: N:TcOpen.Inxton.Data
  name: TcOpen.Inxton.Data
  nameWithType: TcOpen.Inxton.Data
  fullName: TcOpen.Inxton.Data
- uid: TcoData.DataViewModel`1.PaginationUpEnabled*
  commentId: Overload:TcoData.DataViewModel`1.PaginationUpEnabled
  name: PaginationUpEnabled
  nameWithType: DataViewModel<T>.PaginationUpEnabled
  fullName: TcoData.DataViewModel<T>.PaginationUpEnabled
  nameWithType.vb: DataViewModel(Of T).PaginationUpEnabled
  fullName.vb: TcoData.DataViewModel(Of T).PaginationUpEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TcoData.DataViewModel`1.CancelEdit*
  commentId: Overload:TcoData.DataViewModel`1.CancelEdit
  name: CancelEdit
  nameWithType: DataViewModel<T>.CancelEdit
  fullName: TcoData.DataViewModel<T>.CancelEdit
  nameWithType.vb: DataViewModel(Of T).CancelEdit
  fullName.vb: TcoData.DataViewModel(Of T).CancelEdit
- uid: TcoData.DataViewModel`1.StartEdit*
  commentId: Overload:TcoData.DataViewModel`1.StartEdit
  name: StartEdit
  nameWithType: DataViewModel<T>.StartEdit
  fullName: TcoData.DataViewModel<T>.StartEdit
  nameWithType.vb: DataViewModel(Of T).StartEdit
  fullName.vb: TcoData.DataViewModel(Of T).StartEdit
- uid: TcoData.DataViewModel`1.ExportData*
  commentId: Overload:TcoData.DataViewModel`1.ExportData
  name: ExportData
  nameWithType: DataViewModel<T>.ExportData
  fullName: TcoData.DataViewModel<T>.ExportData
  nameWithType.vb: DataViewModel(Of T).ExportData
  fullName.vb: TcoData.DataViewModel(Of T).ExportData
- uid: TcoData.DataViewModel`1.ImportData*
  commentId: Overload:TcoData.DataViewModel`1.ImportData
  name: ImportData
  nameWithType: DataViewModel<T>.ImportData
  fullName: TcoData.DataViewModel<T>.ImportData
  nameWithType.vb: DataViewModel(Of T).ImportData
  fullName.vb: TcoData.DataViewModel(Of T).ImportData
- uid: TcoData.DataViewModel`1.StartCreatingNew*
  commentId: Overload:TcoData.DataViewModel`1.StartCreatingNew
  name: StartCreatingNew
  nameWithType: DataViewModel<T>.StartCreatingNew
  fullName: TcoData.DataViewModel<T>.StartCreatingNew
  nameWithType.vb: DataViewModel(Of T).StartCreatingNew
  fullName.vb: TcoData.DataViewModel(Of T).StartCreatingNew
- uid: TcoData.DataViewModel`1.CreateBrowsable*
  commentId: Overload:TcoData.DataViewModel`1.CreateBrowsable
  name: CreateBrowsable
  nameWithType: DataViewModel<T>.CreateBrowsable
  fullName: TcoData.DataViewModel<T>.CreateBrowsable
  nameWithType.vb: DataViewModel(Of T).CreateBrowsable
  fullName.vb: TcoData.DataViewModel(Of T).CreateBrowsable
- uid: TcOpen.Inxton.Data.DataBrowser{{T}}
  commentId: T:TcOpen.Inxton.Data.DataBrowser{``0}
  parent: TcOpen.Inxton.Data
  definition: TcOpen.Inxton.Data.DataBrowser`1
  name: DataBrowser<T>
  nameWithType: DataBrowser<T>
  fullName: TcOpen.Inxton.Data.DataBrowser<T>
  nameWithType.vb: DataBrowser(Of T)
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T)
  name.vb: DataBrowser(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcOpen.Inxton.Data.DataBrowser`1
  commentId: T:TcOpen.Inxton.Data.DataBrowser`1
  name: DataBrowser<T>
  nameWithType: DataBrowser<T>
  fullName: TcOpen.Inxton.Data.DataBrowser<T>
  nameWithType.vb: DataBrowser(Of T)
  fullName.vb: TcOpen.Inxton.Data.DataBrowser(Of T)
  name.vb: DataBrowser(Of T)
  spec.csharp:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TcOpen.Inxton.Data.DataBrowser`1
    name: DataBrowser
    nameWithType: DataBrowser
    fullName: TcOpen.Inxton.Data.DataBrowser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcoData.DataViewModel`1.CreateCopyOfExisting*
  commentId: Overload:TcoData.DataViewModel`1.CreateCopyOfExisting
  name: CreateCopyOfExisting
  nameWithType: DataViewModel<T>.CreateCopyOfExisting
  fullName: TcoData.DataViewModel<T>.CreateCopyOfExisting
  nameWithType.vb: DataViewModel(Of T).CreateCopyOfExisting
  fullName.vb: TcoData.DataViewModel(Of T).CreateCopyOfExisting
- uid: TcoData.DataViewModel`1.CreateNew*
  commentId: Overload:TcoData.DataViewModel`1.CreateNew
  name: CreateNew
  nameWithType: DataViewModel<T>.CreateNew
  fullName: TcoData.DataViewModel<T>.CreateNew
  nameWithType.vb: DataViewModel(Of T).CreateNew
  fullName.vb: TcoData.DataViewModel(Of T).CreateNew
- uid: TcoData.DataViewModel`1.Delete*
  commentId: Overload:TcoData.DataViewModel`1.Delete
  name: Delete
  nameWithType: DataViewModel<T>.Delete
  fullName: TcoData.DataViewModel<T>.Delete
  nameWithType.vb: DataViewModel(Of T).Delete
  fullName.vb: TcoData.DataViewModel(Of T).Delete
- uid: TcoData.DataViewModel`1.Filter*
  commentId: Overload:TcoData.DataViewModel`1.Filter
  name: Filter
  nameWithType: DataViewModel<T>.Filter
  fullName: TcoData.DataViewModel<T>.Filter
  nameWithType.vb: DataViewModel(Of T).Filter
  fullName.vb: TcoData.DataViewModel(Of T).Filter
- uid: TcoData.DataViewModel`1.FindById*
  commentId: Overload:TcoData.DataViewModel`1.FindById
  name: FindById
  nameWithType: DataViewModel<T>.FindById
  fullName: TcoData.DataViewModel<T>.FindById
  nameWithType.vb: DataViewModel(Of T).FindById
  fullName.vb: TcoData.DataViewModel(Of T).FindById
- uid: TcoData.DataViewModel`1.SendToPlc*
  commentId: Overload:TcoData.DataViewModel`1.SendToPlc
  name: SendToPlc
  nameWithType: DataViewModel<T>.SendToPlc
  fullName: TcoData.DataViewModel<T>.SendToPlc
  nameWithType.vb: DataViewModel(Of T).SendToPlc
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlc
- uid: TcoData.DataViewModel`1.StartCreatingRecordCopy*
  commentId: Overload:TcoData.DataViewModel`1.StartCreatingRecordCopy
  name: StartCreatingRecordCopy
  nameWithType: DataViewModel<T>.StartCreatingRecordCopy
  fullName: TcoData.DataViewModel<T>.StartCreatingRecordCopy
  nameWithType.vb: DataViewModel(Of T).StartCreatingRecordCopy
  fullName.vb: TcoData.DataViewModel(Of T).StartCreatingRecordCopy
- uid: TcoData.DataViewModel`1.CrudDataObject*
  commentId: Overload:TcoData.DataViewModel`1.CrudDataObject
  name: CrudDataObject
  nameWithType: DataViewModel<T>.CrudDataObject
  fullName: TcoData.DataViewModel<T>.CrudDataObject
  nameWithType.vb: DataViewModel(Of T).CrudDataObject
  fullName.vb: TcoData.DataViewModel(Of T).CrudDataObject
- uid: TcoData.ICrudDataObject
  commentId: T:TcoData.ICrudDataObject
  parent: TcoData
  name: ICrudDataObject
  nameWithType: ICrudDataObject
  fullName: TcoData.ICrudDataObject
- uid: TcoData.DataViewModel`1.Update*
  commentId: Overload:TcoData.DataViewModel`1.Update
  name: Update
  nameWithType: DataViewModel<T>.Update
  fullName: TcoData.DataViewModel<T>.Update
  nameWithType.vb: DataViewModel(Of T).Update
  fullName.vb: TcoData.DataViewModel(Of T).Update
- uid: TcoData.DataViewModel`1.page*
  commentId: Overload:TcoData.DataViewModel`1.page
  name: page
  nameWithType: DataViewModel<T>.page
  fullName: TcoData.DataViewModel<T>.page
  nameWithType.vb: DataViewModel(Of T).page
  fullName.vb: TcoData.DataViewModel(Of T).page
- uid: TcoData.DataViewModel`1.FillObservableRecords*
  commentId: Overload:TcoData.DataViewModel`1.FillObservableRecords
  name: FillObservableRecords
  nameWithType: DataViewModel<T>.FillObservableRecords
  fullName: TcoData.DataViewModel<T>.FillObservableRecords
  nameWithType.vb: DataViewModel(Of T).FillObservableRecords
  fullName.vb: TcoData.DataViewModel(Of T).FillObservableRecords
- uid: TcoData.DataViewModel`1.LoadFromPlc*
  commentId: Overload:TcoData.DataViewModel`1.LoadFromPlc
  name: LoadFromPlc
  nameWithType: DataViewModel<T>.LoadFromPlc
  fullName: TcoData.DataViewModel<T>.LoadFromPlc
  nameWithType.vb: DataViewModel(Of T).LoadFromPlc
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlc
- uid: TcoData.DataViewModel`1.ExportCommand*
  commentId: Overload:TcoData.DataViewModel`1.ExportCommand
  name: ExportCommand
  nameWithType: DataViewModel<T>.ExportCommand
  fullName: TcoData.DataViewModel<T>.ExportCommand
  nameWithType.vb: DataViewModel(Of T).ExportCommand
  fullName.vb: TcoData.DataViewModel(Of T).ExportCommand
- uid: Vortex.Presentation.Wpf.RelayCommand
  commentId: T:Vortex.Presentation.Wpf.RelayCommand
  parent: Vortex.Presentation.Wpf
  isExternal: true
  name: RelayCommand
  nameWithType: RelayCommand
  fullName: Vortex.Presentation.Wpf.RelayCommand
- uid: TcoData.DataViewModel`1.ImportCommand*
  commentId: Overload:TcoData.DataViewModel`1.ImportCommand
  name: ImportCommand
  nameWithType: DataViewModel<T>.ImportCommand
  fullName: TcoData.DataViewModel<T>.ImportCommand
  nameWithType.vb: DataViewModel(Of T).ImportCommand
  fullName.vb: TcoData.DataViewModel(Of T).ImportCommand
- uid: TcoData.DataViewModel`1.CancelCreateNewCommand*
  commentId: Overload:TcoData.DataViewModel`1.CancelCreateNewCommand
  name: CancelCreateNewCommand
  nameWithType: DataViewModel<T>.CancelCreateNewCommand
  fullName: TcoData.DataViewModel<T>.CancelCreateNewCommand
  nameWithType.vb: DataViewModel(Of T).CancelCreateNewCommand
  fullName.vb: TcoData.DataViewModel(Of T).CancelCreateNewCommand
- uid: TcoData.DataViewModel`1.CancelEditCommand*
  commentId: Overload:TcoData.DataViewModel`1.CancelEditCommand
  name: CancelEditCommand
  nameWithType: DataViewModel<T>.CancelEditCommand
  fullName: TcoData.DataViewModel<T>.CancelEditCommand
  nameWithType.vb: DataViewModel(Of T).CancelEditCommand
  fullName.vb: TcoData.DataViewModel(Of T).CancelEditCommand
- uid: TcoData.DataViewModel`1.CreateCopyOfExistingCommand*
  commentId: Overload:TcoData.DataViewModel`1.CreateCopyOfExistingCommand
  name: CreateCopyOfExistingCommand
  nameWithType: DataViewModel<T>.CreateCopyOfExistingCommand
  fullName: TcoData.DataViewModel<T>.CreateCopyOfExistingCommand
  nameWithType.vb: DataViewModel(Of T).CreateCopyOfExistingCommand
  fullName.vb: TcoData.DataViewModel(Of T).CreateCopyOfExistingCommand
- uid: TcoData.DataViewModel`1.CreateNewCommand*
  commentId: Overload:TcoData.DataViewModel`1.CreateNewCommand
  name: CreateNewCommand
  nameWithType: DataViewModel<T>.CreateNewCommand
  fullName: TcoData.DataViewModel<T>.CreateNewCommand
  nameWithType.vb: DataViewModel(Of T).CreateNewCommand
  fullName.vb: TcoData.DataViewModel(Of T).CreateNewCommand
- uid: TcoData.DataViewModel`1.DataBrowser*
  commentId: Overload:TcoData.DataViewModel`1.DataBrowser
  name: DataBrowser
  nameWithType: DataViewModel<T>.DataBrowser
  fullName: TcoData.DataViewModel<T>.DataBrowser
  nameWithType.vb: DataViewModel(Of T).DataBrowser
  fullName.vb: TcoData.DataViewModel(Of T).DataBrowser
- uid: TcoData.DataViewModel`1.DataExchange*
  commentId: Overload:TcoData.DataViewModel`1.DataExchange
  name: DataExchange
  nameWithType: DataViewModel<T>.DataExchange
  fullName: TcoData.DataViewModel<T>.DataExchange
  nameWithType.vb: DataViewModel(Of T).DataExchange
  fullName.vb: TcoData.DataViewModel(Of T).DataExchange
- uid: TcoData.DataViewModel`1.DeleteCommand*
  commentId: Overload:TcoData.DataViewModel`1.DeleteCommand
  name: DeleteCommand
  nameWithType: DataViewModel<T>.DeleteCommand
  fullName: TcoData.DataViewModel<T>.DeleteCommand
  nameWithType.vb: DataViewModel(Of T).DeleteCommand
  fullName.vb: TcoData.DataViewModel(Of T).DeleteCommand
- uid: TcoData.DataViewModel`1.EditCommand*
  commentId: Overload:TcoData.DataViewModel`1.EditCommand
  name: EditCommand
  nameWithType: DataViewModel<T>.EditCommand
  fullName: TcoData.DataViewModel<T>.EditCommand
  nameWithType.vb: DataViewModel(Of T).EditCommand
  fullName.vb: TcoData.DataViewModel(Of T).EditCommand
- uid: TcoData.DataViewModel`1.PageUpCommand*
  commentId: Overload:TcoData.DataViewModel`1.PageUpCommand
  name: PageUpCommand
  nameWithType: DataViewModel<T>.PageUpCommand
  fullName: TcoData.DataViewModel<T>.PageUpCommand
  nameWithType.vb: DataViewModel(Of T).PageUpCommand
  fullName.vb: TcoData.DataViewModel(Of T).PageUpCommand
- uid: TcoData.DataViewModel`1.PageDownCommand*
  commentId: Overload:TcoData.DataViewModel`1.PageDownCommand
  name: PageDownCommand
  nameWithType: DataViewModel<T>.PageDownCommand
  fullName: TcoData.DataViewModel<T>.PageDownCommand
  nameWithType.vb: DataViewModel(Of T).PageDownCommand
  fullName.vb: TcoData.DataViewModel(Of T).PageDownCommand
- uid: TcoData.DataViewModel`1.FilterByID*
  commentId: Overload:TcoData.DataViewModel`1.FilterByID
  name: FilterByID
  nameWithType: DataViewModel<T>.FilterByID
  fullName: TcoData.DataViewModel<T>.FilterByID
  nameWithType.vb: DataViewModel(Of T).FilterByID
  fullName.vb: TcoData.DataViewModel(Of T).FilterByID
- uid: TcoData.DataViewModel`1.FindByCriteriaCommand*
  commentId: Overload:TcoData.DataViewModel`1.FindByCriteriaCommand
  name: FindByCriteriaCommand
  nameWithType: DataViewModel<T>.FindByCriteriaCommand
  fullName: TcoData.DataViewModel<T>.FindByCriteriaCommand
  nameWithType.vb: DataViewModel(Of T).FindByCriteriaCommand
  fullName.vb: TcoData.DataViewModel(Of T).FindByCriteriaCommand
- uid: TcoData.DataViewModel`1.Mode*
  commentId: Overload:TcoData.DataViewModel`1.Mode
  name: Mode
  nameWithType: DataViewModel<T>.Mode
  fullName: TcoData.DataViewModel<T>.Mode
  nameWithType.vb: DataViewModel(Of T).Mode
  fullName.vb: TcoData.DataViewModel(Of T).Mode
- uid: TcoData.DataViewModel`1.Limit*
  commentId: Overload:TcoData.DataViewModel`1.Limit
  name: Limit
  nameWithType: DataViewModel<T>.Limit
  fullName: TcoData.DataViewModel<T>.Limit
  nameWithType.vb: DataViewModel(Of T).Limit
  fullName.vb: TcoData.DataViewModel(Of T).Limit
- uid: TcoData.DataViewModel`1.Skip*
  commentId: Overload:TcoData.DataViewModel`1.Skip
  name: Skip
  nameWithType: DataViewModel<T>.Skip
  fullName: TcoData.DataViewModel<T>.Skip
  nameWithType.vb: DataViewModel(Of T).Skip
  fullName.vb: TcoData.DataViewModel(Of T).Skip
- uid: TcoData.DataViewModel`1.Pages*
  commentId: Overload:TcoData.DataViewModel`1.Pages
  name: Pages
  nameWithType: DataViewModel<T>.Pages
  fullName: TcoData.DataViewModel<T>.Pages
  nameWithType.vb: DataViewModel(Of T).Pages
  fullName.vb: TcoData.DataViewModel(Of T).Pages
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: TcoData.DataViewModel`1.ObservableRecords*
  commentId: Overload:TcoData.DataViewModel`1.ObservableRecords
  name: ObservableRecords
  nameWithType: DataViewModel<T>.ObservableRecords
  fullName: TcoData.DataViewModel<T>.ObservableRecords
  nameWithType.vb: DataViewModel(Of T).ObservableRecords
  fullName.vb: TcoData.DataViewModel(Of T).ObservableRecords
- uid: TcoData.DataViewModel`1.RecordIdentifier*
  commentId: Overload:TcoData.DataViewModel`1.RecordIdentifier
  name: RecordIdentifier
  nameWithType: DataViewModel<T>.RecordIdentifier
  fullName: TcoData.DataViewModel<T>.RecordIdentifier
  nameWithType.vb: DataViewModel(Of T).RecordIdentifier
  fullName.vb: TcoData.DataViewModel(Of T).RecordIdentifier
- uid: System.Collections.Generic.List{TcoData.ValueChangeItem}
  commentId: T:System.Collections.Generic.List{TcoData.ValueChangeItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ValueChangeItem>
  nameWithType: List<ValueChangeItem>
  fullName: System.Collections.Generic.List<TcoData.ValueChangeItem>
  nameWithType.vb: List(Of ValueChangeItem)
  fullName.vb: System.Collections.Generic.List(Of TcoData.ValueChangeItem)
  name.vb: List(Of ValueChangeItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TcoData.ValueChangeItem
    name: ValueChangeItem
    nameWithType: ValueChangeItem
    fullName: TcoData.ValueChangeItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TcoData.ValueChangeItem
    name: ValueChangeItem
    nameWithType: ValueChangeItem
    fullName: TcoData.ValueChangeItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TcoData.DataViewModel`1.Changes*
  commentId: Overload:TcoData.DataViewModel`1.Changes
  name: Changes
  nameWithType: DataViewModel<T>.Changes
  fullName: TcoData.DataViewModel<T>.Changes
  nameWithType.vb: DataViewModel(Of T).Changes
  fullName.vb: TcoData.DataViewModel(Of T).Changes
- uid: TcoData.DataViewModel`1.SelectedRecord*
  commentId: Overload:TcoData.DataViewModel`1.SelectedRecord
  name: SelectedRecord
  nameWithType: DataViewModel<T>.SelectedRecord
  fullName: TcoData.DataViewModel<T>.SelectedRecord
  nameWithType.vb: DataViewModel(Of T).SelectedRecord
  fullName.vb: TcoData.DataViewModel(Of T).SelectedRecord
- uid: TcoData.DataViewModel`1.SendToPlcCommand*
  commentId: Overload:TcoData.DataViewModel`1.SendToPlcCommand
  name: SendToPlcCommand
  nameWithType: DataViewModel<T>.SendToPlcCommand
  fullName: TcoData.DataViewModel<T>.SendToPlcCommand
  nameWithType.vb: DataViewModel(Of T).SendToPlcCommand
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlcCommand
- uid: TcoData.DataViewModel`1.LoadFromPlcCommand*
  commentId: Overload:TcoData.DataViewModel`1.LoadFromPlcCommand
  name: LoadFromPlcCommand
  nameWithType: DataViewModel<T>.LoadFromPlcCommand
  fullName: TcoData.DataViewModel<T>.LoadFromPlcCommand
  nameWithType.vb: DataViewModel(Of T).LoadFromPlcCommand
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlcCommand
- uid: TcoData.DataViewModel`1.StartCreateCopyOfExisting*
  commentId: Overload:TcoData.DataViewModel`1.StartCreateCopyOfExisting
  name: StartCreateCopyOfExisting
  nameWithType: DataViewModel<T>.StartCreateCopyOfExisting
  fullName: TcoData.DataViewModel<T>.StartCreateCopyOfExisting
  nameWithType.vb: DataViewModel(Of T).StartCreateCopyOfExisting
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateCopyOfExisting
- uid: TcoData.DataViewModel`1.StartCreateNewCommand*
  commentId: Overload:TcoData.DataViewModel`1.StartCreateNewCommand
  name: StartCreateNewCommand
  nameWithType: DataViewModel<T>.StartCreateNewCommand
  fullName: TcoData.DataViewModel<T>.StartCreateNewCommand
  nameWithType.vb: DataViewModel(Of T).StartCreateNewCommand
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateNewCommand
- uid: TcoData.DataViewModel`1.UpdateCommand*
  commentId: Overload:TcoData.DataViewModel`1.UpdateCommand
  name: UpdateCommand
  nameWithType: DataViewModel<T>.UpdateCommand
  fullName: TcoData.DataViewModel<T>.UpdateCommand
  nameWithType.vb: DataViewModel(Of T).UpdateCommand
  fullName.vb: TcoData.DataViewModel(Of T).UpdateCommand
- uid: TcoData.DataViewModel`1.StartCreateNewCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.StartCreateNewCommandAvailable
  name: StartCreateNewCommandAvailable
  nameWithType: DataViewModel<T>.StartCreateNewCommandAvailable
  fullName: TcoData.DataViewModel<T>.StartCreateNewCommandAvailable
  nameWithType.vb: DataViewModel(Of T).StartCreateNewCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateNewCommandAvailable
- uid: TcoData.FunctionAvailability.StartCreateNewCommandAvailable
  commentId: P:TcoData.FunctionAvailability.StartCreateNewCommandAvailable
  parent: TcoData.FunctionAvailability
  name: StartCreateNewCommandAvailable
  nameWithType: FunctionAvailability.StartCreateNewCommandAvailable
  fullName: TcoData.FunctionAvailability.StartCreateNewCommandAvailable
- uid: TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable*
  commentId: Overload:TcoData.DataViewModel`1.StartCreateCopyOfExistingAvailable
  name: StartCreateCopyOfExistingAvailable
  nameWithType: DataViewModel<T>.StartCreateCopyOfExistingAvailable
  fullName: TcoData.DataViewModel<T>.StartCreateCopyOfExistingAvailable
  nameWithType.vb: DataViewModel(Of T).StartCreateCopyOfExistingAvailable
  fullName.vb: TcoData.DataViewModel(Of T).StartCreateCopyOfExistingAvailable
- uid: TcoData.FunctionAvailability.StartCreateCopyOfExistingAvailable
  commentId: P:TcoData.FunctionAvailability.StartCreateCopyOfExistingAvailable
  parent: TcoData.FunctionAvailability
  name: StartCreateCopyOfExistingAvailable
  nameWithType: FunctionAvailability.StartCreateCopyOfExistingAvailable
  fullName: TcoData.FunctionAvailability.StartCreateCopyOfExistingAvailable
- uid: TcoData.DataViewModel`1.UpdateCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.UpdateCommandAvailable
  name: UpdateCommandAvailable
  nameWithType: DataViewModel<T>.UpdateCommandAvailable
  fullName: TcoData.DataViewModel<T>.UpdateCommandAvailable
  nameWithType.vb: DataViewModel(Of T).UpdateCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).UpdateCommandAvailable
- uid: TcoData.FunctionAvailability.UpdateCommandAvailable
  commentId: P:TcoData.FunctionAvailability.UpdateCommandAvailable
  parent: TcoData.FunctionAvailability
  name: UpdateCommandAvailable
  nameWithType: FunctionAvailability.UpdateCommandAvailable
  fullName: TcoData.FunctionAvailability.UpdateCommandAvailable
- uid: TcoData.DataViewModel`1.CancelEditCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.CancelEditCommandAvailable
  name: CancelEditCommandAvailable
  nameWithType: DataViewModel<T>.CancelEditCommandAvailable
  fullName: TcoData.DataViewModel<T>.CancelEditCommandAvailable
  nameWithType.vb: DataViewModel(Of T).CancelEditCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).CancelEditCommandAvailable
- uid: TcoData.FunctionAvailability.CancelEditCommandAvailable
  commentId: P:TcoData.FunctionAvailability.CancelEditCommandAvailable
  parent: TcoData.FunctionAvailability
  name: CancelEditCommandAvailable
  nameWithType: FunctionAvailability.CancelEditCommandAvailable
  fullName: TcoData.FunctionAvailability.CancelEditCommandAvailable
- uid: TcoData.DataViewModel`1.DeleteCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.DeleteCommandAvailable
  name: DeleteCommandAvailable
  nameWithType: DataViewModel<T>.DeleteCommandAvailable
  fullName: TcoData.DataViewModel<T>.DeleteCommandAvailable
  nameWithType.vb: DataViewModel(Of T).DeleteCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).DeleteCommandAvailable
- uid: TcoData.FunctionAvailability.DeleteCommandAvailable
  commentId: P:TcoData.FunctionAvailability.DeleteCommandAvailable
  parent: TcoData.FunctionAvailability
  name: DeleteCommandAvailable
  nameWithType: FunctionAvailability.DeleteCommandAvailable
  fullName: TcoData.FunctionAvailability.DeleteCommandAvailable
- uid: TcoData.DataViewModel`1.EditCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.EditCommandAvailable
  name: EditCommandAvailable
  nameWithType: DataViewModel<T>.EditCommandAvailable
  fullName: TcoData.DataViewModel<T>.EditCommandAvailable
  nameWithType.vb: DataViewModel(Of T).EditCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).EditCommandAvailable
- uid: TcoData.FunctionAvailability.EditCommandAvailable
  commentId: P:TcoData.FunctionAvailability.EditCommandAvailable
  parent: TcoData.FunctionAvailability
  name: EditCommandAvailable
  nameWithType: FunctionAvailability.EditCommandAvailable
  fullName: TcoData.FunctionAvailability.EditCommandAvailable
- uid: TcoData.DataViewModel`1.SendToPlcCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.SendToPlcCommandAvailable
  name: SendToPlcCommandAvailable
  nameWithType: DataViewModel<T>.SendToPlcCommandAvailable
  fullName: TcoData.DataViewModel<T>.SendToPlcCommandAvailable
  nameWithType.vb: DataViewModel(Of T).SendToPlcCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).SendToPlcCommandAvailable
- uid: TcoData.FunctionAvailability.SendToPlcCommandAvailable
  commentId: P:TcoData.FunctionAvailability.SendToPlcCommandAvailable
  parent: TcoData.FunctionAvailability
  name: SendToPlcCommandAvailable
  nameWithType: FunctionAvailability.SendToPlcCommandAvailable
  fullName: TcoData.FunctionAvailability.SendToPlcCommandAvailable
- uid: TcoData.DataViewModel`1.LoadFromPlcCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.LoadFromPlcCommandAvailable
  name: LoadFromPlcCommandAvailable
  nameWithType: DataViewModel<T>.LoadFromPlcCommandAvailable
  fullName: TcoData.DataViewModel<T>.LoadFromPlcCommandAvailable
  nameWithType.vb: DataViewModel(Of T).LoadFromPlcCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).LoadFromPlcCommandAvailable
- uid: TcoData.FunctionAvailability.LoadFromPlcCommandAvailable
  commentId: P:TcoData.FunctionAvailability.LoadFromPlcCommandAvailable
  parent: TcoData.FunctionAvailability
  name: LoadFromPlcCommandAvailable
  nameWithType: FunctionAvailability.LoadFromPlcCommandAvailable
  fullName: TcoData.FunctionAvailability.LoadFromPlcCommandAvailable
- uid: TcoData.DataViewModel`1.ExportCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.ExportCommandAvailable
  name: ExportCommandAvailable
  nameWithType: DataViewModel<T>.ExportCommandAvailable
  fullName: TcoData.DataViewModel<T>.ExportCommandAvailable
  nameWithType.vb: DataViewModel(Of T).ExportCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).ExportCommandAvailable
- uid: TcoData.FunctionAvailability.ExportCommandAvailable
  commentId: P:TcoData.FunctionAvailability.ExportCommandAvailable
  parent: TcoData.FunctionAvailability
  name: ExportCommandAvailable
  nameWithType: FunctionAvailability.ExportCommandAvailable
  fullName: TcoData.FunctionAvailability.ExportCommandAvailable
- uid: TcoData.DataViewModel`1.ImportCommandAvailable*
  commentId: Overload:TcoData.DataViewModel`1.ImportCommandAvailable
  name: ImportCommandAvailable
  nameWithType: DataViewModel<T>.ImportCommandAvailable
  fullName: TcoData.DataViewModel<T>.ImportCommandAvailable
  nameWithType.vb: DataViewModel(Of T).ImportCommandAvailable
  fullName.vb: TcoData.DataViewModel(Of T).ImportCommandAvailable
- uid: TcoData.FunctionAvailability.ImportCommandAvailable
  commentId: P:TcoData.FunctionAvailability.ImportCommandAvailable
  parent: TcoData.FunctionAvailability
  name: ImportCommandAvailable
  nameWithType: FunctionAvailability.ImportCommandAvailable
  fullName: TcoData.FunctionAvailability.ImportCommandAvailable
