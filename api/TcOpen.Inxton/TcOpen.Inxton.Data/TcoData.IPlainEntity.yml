### YamlMime:ManagedReference
items:
- uid: TcoData.IPlainEntity
  commentId: T:TcoData.IPlainEntity
  id: IPlainEntity
  parent: TcoData
  children:
  - TcoData.IPlainEntity.Changes
  langs:
  - csharp
  - vb
  name: IPlainEntity
  nameWithType: IPlainEntity
  fullName: TcoData.IPlainEntity
  type: Interface
  source:
    remote:
      path: src/TcoData/src/TcoDataConnector/pex/Entity/IPlainEntity.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: IPlainEntity
    path: ../TcOpen/src/TcoData/src/TcoDataConnector/pex/Entity/IPlainEntity.cs
    startLine: 4
  assemblies:
  - TcoDataConnector
  namespace: TcoData
  syntax:
    content: public interface IPlainEntity
    content.vb: Public Interface IPlainEntity
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TcoData.IPlainEntity.Changes
  commentId: P:TcoData.IPlainEntity.Changes
  id: Changes
  parent: TcoData.IPlainEntity
  langs:
  - csharp
  - vb
  name: Changes
  nameWithType: IPlainEntity.Changes
  fullName: TcoData.IPlainEntity.Changes
  type: Property
  source:
    remote:
      path: src/TcoData/src/TcoDataConnector/pex/Entity/IPlainEntity.cs
      branch: dev
      repo: https://github.com/TcOpenGroup/TcOpen
    id: Changes
    path: ../TcOpen/src/TcoData/src/TcoDataConnector/pex/Entity/IPlainEntity.cs
    startLine: 6
  assemblies:
  - TcoDataConnector
  namespace: TcoData
  syntax:
    content: List<ValueChangeItem> Changes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{TcoData.ValueChangeItem}
    content.vb: Property Changes As List(Of ValueChangeItem)
  overload: TcoData.IPlainEntity.Changes*
  modifiers.csharp:
  - get
  - set
references:
- uid: TcoData
  commentId: N:TcoData
  name: TcoData
  nameWithType: TcoData
  fullName: TcoData
- uid: TcoData.IPlainEntity.Changes*
  commentId: Overload:TcoData.IPlainEntity.Changes
  name: Changes
  nameWithType: IPlainEntity.Changes
  fullName: TcoData.IPlainEntity.Changes
- uid: System.Collections.Generic.List{TcoData.ValueChangeItem}
  commentId: T:System.Collections.Generic.List{TcoData.ValueChangeItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ValueChangeItem>
  nameWithType: List<ValueChangeItem>
  fullName: System.Collections.Generic.List<TcoData.ValueChangeItem>
  nameWithType.vb: List(Of ValueChangeItem)
  fullName.vb: System.Collections.Generic.List(Of TcoData.ValueChangeItem)
  name.vb: List(Of ValueChangeItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TcoData.ValueChangeItem
    name: ValueChangeItem
    nameWithType: ValueChangeItem
    fullName: TcoData.ValueChangeItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TcoData.ValueChangeItem
    name: ValueChangeItem
    nameWithType: ValueChangeItem
    fullName: TcoData.ValueChangeItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
